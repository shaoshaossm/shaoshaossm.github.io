<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秋水墨色染</title>
  
  
  <link href="https://shaoshaossm.github.io/atom.xml" rel="self"/>
  
  <link href="https://shaoshaossm.github.io/"/>
  <updated>2022-02-25T09:05:18.010Z</updated>
  <id>https://shaoshaossm.github.io/</id>
  
  <author>
    <name>shaoshaossm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动态代理</title>
    <link href="https://shaoshaossm.github.io/2022-02-24-dong-tai-dai-li.html"/>
    <id>https://shaoshaossm.github.io/2022-02-24-dong-tai-dai-li.html</id>
    <published>2022-02-24T05:00:46.000Z</published>
    <updated>2022-02-25T09:05:18.010Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在原有程序不变的情况下通过动态代理增加新的功能(功能增强)</li><li>减少代码的重复</li><li>专注业务逻辑代码</li><li>解耦合，让业务功能和日志，事务非业务功能分离</li></ul><h3 id="jdk动态代理实现案例"><a href="#jdk动态代理实现案例" class="headerlink" title="jdk动态代理实现案例"></a>jdk动态代理实现案例</h3><ul><li>使用JDK中的Proxy，Method，InvocationHanderl创建对象。</li><li>JDK动态代理要求目标类必须实现接口</li></ul><p>SomeService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">doOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>SomeServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行业务方法doSome"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行业务方法doOther"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ServiceTools</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceTools</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SimpleDateFormat</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss:SSS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> format <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"非业务方法,方法的执行时间:"</span><span class="token operator">+</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doTrans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"非业务方法,方法执行完毕后提交事务"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyInvocationHandler</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ServiceTools</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span> target<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyInvocationHandler</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 通过代理对象执行方法时,会调用invoke()</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行了MyInvocationHandler中的invoke()方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> methodName <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//doSome , doOther</span>        <span class="token class-name">Object</span> res <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"doSome"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ServiceTools</span><span class="token punctuation">.</span><span class="token function">doLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//SomeServiceImpl.doOther(), doSome()</span>            <span class="token class-name">ServiceTools</span><span class="token punctuation">.</span><span class="token function">doTrans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            res <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyApp</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">MyInvocationHandler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">SomeService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">SomeServiceImpl</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 使用jdk的Proxy创建代理对象</span>        <span class="token class-name">SomeService</span> someService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SomeServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 创建InvocationHandler对象</span>        <span class="token class-name">InvocationHandler</span> invocationHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyInvocationHandler</span><span class="token punctuation">(</span>someService<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用Proxy创建代理</span>        <span class="token class-name">SomeService</span> proxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>someService<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                someService<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> invocationHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 通过代理执行方法,会调用handler中的invoke()方法</span>        proxy<span class="token punctuation">.</span><span class="token function">doOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        proxy<span class="token punctuation">.</span><span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">执行了<span class="token class-name">MyInvocationHandler</span>中的<span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法执行业务方法doOther<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>执行了<span class="token class-name">MyInvocationHandler</span>中的<span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法非业务方法<span class="token punctuation">,</span>方法的执行时间<span class="token operator">:</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">24</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">283</span>执行业务方法doSome非业务方法<span class="token punctuation">,</span>方法执行完毕后提交事务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CGLB动态代理"><a href="#CGLB动态代理" class="headerlink" title="CGLB动态代理"></a>CGLB动态代理</h3><ul><li>第三方工具库，创建代理对象，原理是继承。通过继承目标类，创建子类</li><li>子类就是代理对象，要求目标类不能是final的，方法也不能是final的</li></ul><h3 id="aspectj"><a href="#aspectj" class="headerlink" title="aspectj"></a>aspectj</h3><p>aspectj框架也可实现AOP功能增强</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;在原有程序不变的情况下通过动态代理增加新的功能(功能增强)&lt;/li&gt;
&lt;li&gt;减少代码的重复&lt;/li&gt;
&lt;li&gt;专注业务逻辑代码&lt;/li&gt;
&lt;li&gt;解耦合，让业务功能和日志，事务非业务功能分离&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;jdk动态代理实现案例&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="设计模式" scheme="https://shaoshaossm.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="java" scheme="https://shaoshaossm.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>依赖使用合集</title>
    <link href="https://shaoshaossm.github.io/2022-02-23-yi-lai-shi-yong-he-ji.html"/>
    <id>https://shaoshaossm.github.io/2022-02-23-yi-lai-shi-yong-he-ji.html</id>
    <published>2022-02-23T08:42:56.000Z</published>
    <updated>2022-02-25T09:12:50.184Z</updated>
    
    <content type="html"><![CDATA[<p>jdk版本</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>单元测试</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>spring依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.7.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>aspectj依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aspects<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.2.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;jdk版本&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-xml&quot; data-language=&quot;xml&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;toke</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="spring" scheme="https://shaoshaossm.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>注解的使用合集</title>
    <link href="https://shaoshaossm.github.io/2022-02-23-zhu-jie-de-shi-yong-he-ji.html"/>
    <id>https://shaoshaossm.github.io/2022-02-23-zhu-jie-de-shi-yong-he-ji.html</id>
    <published>2022-02-23T08:22:43.000Z</published>
    <updated>2022-02-25T15:06:05.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h3><h4 id="Component-、-Respotory-、-Service、-Controller"><a href="#Component-、-Respotory-、-Service、-Controller" class="headerlink" title="@Component 、@Respotory 、@Service、@Controller"></a>@Component 、@Respotory 、@Service、@Controller</h4><ul><li>用来创建对象，等同于<bean>的功能</li><li>属性 value 就是对象的名称，也就是bean的id值</li><li>value的值是唯一的，创建的对象在整个spring容器中就一个</li><li>位置： 在类的上面</li><li>@Component(value = “myStudent”) 等同于 <bean id="someService1" class="com.bjpowernode.ba01"/></li><li><code>@Respotory</code> (用在持久层类的上面) ：放在dao的实现类上面，创建dao对象，dao对象是能访问数据库的。</li><li><code>@Service</code> （用在业务层上面）：放在service的实现类上面，创建service对象，service对象是做业务处理，可以有事务等功能</li><li><code>@Controller</code> (用在控制器上面) ：放在控制器（处理器）类的上面，创建控制器对象，能够接收用户提交的参数，显示请求的处理结果</li><li>在不确定一个类使用在哪个层时，使用@Component注解。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"myStudent"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span><span class="token string">"myStudent"</span><span class="token punctuation">)</span> <span class="token comment">// value 可以省略</span><span class="token comment">// 不指定对象名称，有spring提供默认名称 （默认为类名的首字母小写）</span><span class="token annotation punctuation">@Component</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>声明组件扫描器(component-scan),组件就是java对象<ul><li>base-package：指定注解在项目中的包名</li><li>工作方式：spring会扫描base-package指定的包，把包中和子包中的所有类，找到类的注解，按照注解的功能创建对象，或给属性赋值</li></ul></li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--本包--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--;或,--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba01;com.bjpowernode.ba02;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--指定父包--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Value"><a href="#Value" class="headerlink" title="@Value"></a>@Value</h4><ul><li>简单类型的属性赋值</li><li>属性：value 是string类型的，表示简单类型的属性值</li><li>位置：<ul><li>在属性定义的上面，无需set方法，推荐使用</li><li>在set方法上面</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"张飞"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"11"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"张飞"</span><span class="token punctuation">)</span> <span class="token comment">// value 可以省略</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Autowired-Qualifier"><a href="#Autowired-Qualifier" class="headerlink" title="@Autowired @Qualifier"></a>@Autowired @Qualifier</h4><ul><li>引用类型，实现引用类型的赋值</li><li><font color="red">默认使用的是byType自动注入</font></li><li>如果要使用<code>byName</code>方式<ul><li>在属性上面加入@Autowired</li><li>在属性上面加入@Qualifier(value = “bean的id”) ：表示使用指定名称的bean完成赋值</li></ul></li><li>属性：required，是一个boolean类型的，默认是true<ul><li>require=true: 表示引用类型赋值失败，程序报错，并终止执行</li><li>require=false：表示引用类型赋值失败，程序正常执行，引用类型是null</li></ul></li><li>位置：<ul><li>在属性定义上面，无需set方法，推荐使用</li><li>在set方法上面</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 默认：byType  require=true</span><span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>require<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">School</span> school<span class="token punctuation">;</span><span class="token comment">// byName</span><span class="token annotation punctuation">@Autowired</span><span class="token annotation punctuation">@Qualifier</span><span class="token punctuation">(</span><span class="token string">"mySchool"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">School</span> school<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h4><ul><li>引用类型</li><li>来自jdk中的注解，spring框架提供了对该注解的支持</li><li><font color="red">默认使用的是byName自动注入</font><ul><li>先使用byName自定注入，如果byName赋值失败，再使用byType</li><li>只使用byName，需要增加一个name属性，name的值是bean的id(名称)</li></ul></li><li>位置：<ul><li>在属性定义上面，无需set方法，推荐使用</li><li>在set方法上面</li></ul></li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> <span class="token class-name">School</span> school<span class="token punctuation">;</span><span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"myschool"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">School</span> school<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="aspectj-spring内置AOP框架"><a href="#aspectj-spring内置AOP框架" class="headerlink" title="aspectj(spring内置AOP框架)"></a>aspectj(spring内置AOP框架)</h3><h4 id="Aspectj"><a href="#Aspectj" class="headerlink" title="@Aspectj"></a>@Aspectj</h4><ul><li>作用：表示当前类是切面类</li><li>切面类：用来给业务方法增加功能的类，在这个类中有切面的功能代码</li><li>位置：在类定义的上面</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAspect</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Before"><a href="#Before" class="headerlink" title="@Before"></a>@Before</h4><ul><li><font color="red">前置通知注解</font></li><li>属性value：是切入点表达式，表示切面的功能执行的位置</li><li>在目标方法之前执行</li><li>不会改变和影响方法的执行和执行结果</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">"execution(void *..SomeServiceImpl.doSome(String,Integer))"</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myBefore2</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="AfterReturning"><a href="#AfterReturning" class="headerlink" title="@AfterReturning"></a>@AfterReturning</h4><ul><li><font color="red">后置通知注解</font></li><li>在目标方法之后执行</li><li>能够获取到目标方法的返回值，可以根据这个返回值做不同的处理功能r</li><li>Object  res = doOther</li><li>可以修改这个返回值</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doOther(..))"</span><span class="token punctuation">,</span>returning <span class="token operator">=</span> <span class="token string">"res"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myAfterReturning</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">,</span><span class="token class-name">Object</span> res<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Around"><a href="#Around" class="headerlink" title="@Around"></a>@Around</h4><ul><li><font color="red">环绕通知注解</font></li><li>在目标方法前后都能增加功能</li><li>控制目标方法是否被调用执行</li><li>修改原来目标方法的执行结果，影响最后的调用结果</li><li>参数：ProceedingJoinPoint 执行目标方法</li><li> 返回值：目标方法的执行结果，可以被修改</li><li>常用作事务管理</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doFirst(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">myAround</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> proceedingJoinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="AfterThrowing"><a href="#AfterThrowing" class="headerlink" title="@AfterThrowing"></a>@AfterThrowing</h4><p><font color="red">异常通知注解</font></p><ul><li>参数有一个Exception 和 JoinPoint</li><li> 属性：value 切入点表达式</li><li> throwing 自定义变量，表示方法抛出的异常对象</li><li>变量名和方法参数名一样</li><li>在目标方法抛出异常时执行</li><li>做异常监控程序</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doSecond(..))"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"ex"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myAfterException</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"异常通知,方法发生异常时执行:"</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="After"><a href="#After" class="headerlink" title="@After"></a>@After</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;spring&quot;&gt;&lt;a href=&quot;#spring&quot; class=&quot;headerlink&quot; title=&quot;spring&quot;&gt;&lt;/a&gt;spring&lt;/h3&gt;&lt;h4 id=&quot;Component-、-Respotory-、-Service、-Controller&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="注解" scheme="https://shaoshaossm.github.io/tags/%E6%B3%A8%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>spring框架</title>
    <link href="https://shaoshaossm.github.io/2022-02-22-spring-kuang-jia.html"/>
    <id>https://shaoshaossm.github.io/2022-02-22-spring-kuang-jia.html</id>
    <published>2022-02-22T12:23:27.000Z</published>
    <updated>2022-02-25T15:05:49.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IOC-控制反转"><a href="#IOC-控制反转" class="headerlink" title="IOC 控制反转"></a>IOC 控制反转</h3><p>描述：把对象的创建，赋值，管理工作都交给代码之外的容器实现，也就是对象的创建是由其他外部资源完成</p><ul><li>控制: 创建对象,对象的属性赋值,对象之间的关系管理</li><li>反转: 将创建对象的权限交给容器来创建,而不是由开人人员创建.由容器代理开发人员管理对象,给对象赋值</li></ul><blockquote><p>目的是减少对代码的改动,也能实现不同的功能,实现解耦合</p></blockquote><ul><li><code>spring</code>是使用的<code>DI(Dependency Injection)</code>实现了<code>ioc</code>的功能</li><li><code>spring</code>底层创建对象,使用的是反射机制</li><li><code>DI</code>给属性赋值: <ul><li><code>set</code>注入:<code>spring</code>调用类的<code>set</code>方法实现属性的赋值<ul><li>简单类型<code>set</code>注入:&lt;<property name="属性名" value="属性值"></property>&gt;</li><li>引用类型<code>set</code>注入:&lt;<property name="属性名" ref="bean的id"></property>&gt;</li></ul></li><li>构造注入:<code>spring</code>调用有参数的构造方法<ul><li><constructor-arg name="name" value="张三"></constructor-arg> name表示构造方法的形参名</li><li><constructor-arg index="0" value="李四"></constructor-arg> index表示构造方法形参的位置,从0开始</li></ul></li></ul></li></ul><h3 id="hello-Spring"><a href="#hello-Spring" class="headerlink" title="hello Spring"></a>hello Spring</h3><p>SomeService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>SomeServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">SomeServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"SomeService构造方法执行了!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行了SomeServiceImpl的doSome()方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>beans.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring是把创建好的对象放入map中,            springMap.put(id,对象)            eg: springMap.put(someService,new someServiceImpl())            一个bean 标签声明一个对象    --></span>    <span class="token comment">&lt;!--  scope="singleton"  一次创建一个对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>someService<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.service.impl.SomeServiceImpl<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>singleton<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- scope="prototype"   一次创建多个对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>someService1<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.service.impl.SomeServiceImpl<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myDate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.util.Date<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Test</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//使用spring容器创建的对夏</span>    <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"beans.xml"</span><span class="token punctuation">;</span>    <span class="token comment">//ApplicationContext表示spring容器,通过容器获取对象</span>    <span class="token comment">//ClassPathXmlApplicationContext表示从类路径加载spring的配置文件</span>    <span class="token class-name">ApplicationContext</span> application <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">SomeService</span> someService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">)</span> application<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"someService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    someService<span class="token punctuation">.</span><span class="token function">doSome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>set注入</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba02.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>海问香<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>school<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba02.School<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村小学<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村庄<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用有参构造</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--使用name属性构造注入--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba03.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>张三<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>school<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba03.School<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村小学<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村庄<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--使用index属性实现构造注入--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba03.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>李四<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>  <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--省略index--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba03.Student<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>李四<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span>  <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span>   <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--创建file构造注入--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myfile<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.io.File<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>E:\BaiduNetdiskDownload\Spring\reamme.txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>child<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>readme.txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>引用类型的自动注入<ul><li><code>byName</code> : java类中引用类型的属性名和spring容器中(配置文件)<bean>的id名称一样,且数据类型一致,这样的容器中的bean,spring能够赋值给引用类型</li><li><code>byType</code>: java类中引用类型的数据类型和spring容器中(配置文件)<bean>的class属性是<font color="red">同源</font>关系,且数据类型一致,这样bean能够赋值给引用类型<ul><li>java类中引用类型的数据类型和bean的class的值是一样的</li><li>java类中引用类型的数据类型和bean的class的值是父子类关系的</li><li>java类中引用类型的数据类型和bean的class的值是接口和实现类关系的</li></ul></li></ul></li></ul><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--byname--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba04.Student<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>byName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>胡<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--        引用类型 用了byName即可自动注入             引用类型的属性名和spring容器中(配置文件)&lt;bean>的id名称一样,且数据类型一致--></span>        <span class="token comment">&lt;!--        &lt;property name="school" ref="school">&lt;/property>--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>school<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba04.School<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村小学<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村庄<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--byType--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba05.Student<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>byType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>胡<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--&lt;bean id="mySchool" class="com.bjpowernode.ba05.School" >        &lt;property name="name" value="路村小学">&lt;/property>        &lt;property name="address" value="路村庄">&lt;/property>    &lt;/bean>--></span>    <span class="token comment">&lt;!--    school的子类--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primarySchool<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba05.PrimarySchool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>北京小学<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>北京<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多个配置文件</p><p>spring-school.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mySchool<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba06.School<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>牛逼小学<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>路村庄<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>spring-student.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myStudent<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba06.Student<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>byType<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>胡鑫亮<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>total.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--主配置文件,一般包含其他的配置文件--></span><span class="token comment">&lt;!--    &lt;import resource="classpath:ba06/spring-school.xml">&lt;/import>    &lt;import resource="classpath:ba06/spring-student.xml">&lt;/import>--></span><span class="token comment">&lt;!--或者使用通配符(*)--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:ba06/spring-*.xml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>import</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加载test.properties属性配置文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:test.properties<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>property-placeholder</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="AOP面向切面编程"><a href="#AOP面向切面编程" class="headerlink" title="AOP面向切面编程"></a>AOP面向切面编程</h3><ul><li>从动态角度考虑程序运行过程</li><li>AOP底层就是采用动态代理模式实现的。采用了两种代理，<font color="red">JDK动态代理</font>和<font color="red">CGLB动态代理</font></li><li><code>Aspect</code>:切面，表示增强功能</li><li><code>Pointcut</code>: 切入点,指多个连接点方法的集合,多个方法</li><li><code>Advice</code>:通知,表示切面功能执行的时间</li><li>切面三个关键要素<ul><li>切面的功能代码，切面要干什么</li><li>切面的执行位置，使用Pointcut表示切面执行的位置</li><li>切面的执行时间，使用Advice表示时间，在目标方法之前，还是目标方法之后</li></ul></li><li>如何理解面向切面编程<ul><li>在分析项目功能时,找出切面</li><li>合理安排切面的执行时间</li><li>合理安排切面的执行位置,在哪个类,哪个方法增加增强功能</li></ul></li></ul><h4 id="aspectj"><a href="#aspectj" class="headerlink" title="aspectj"></a>aspectj</h4><ul><li>spring中内置的开源专门做aop的框架</li><li>实现方式<ul><li>使用xml的配置文件</li><li>使用注解</li></ul></li><li>execution表达式共四部分</li><li>execution(访问权限 方法返回值 <font color="red">方法声明(参数)</font> 异常类型)</li></ul><p><img src="https://img-blog.csdnimg.cn/ac5d0e251ded4097bf94914d42c3e955.png" alt="常用五种切入点表达式"></p><p>案例演示</p><p>SomeService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>SomeServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SomeService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSome</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"目标方法doSome"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyAspect 前置通知</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">JoinPoint</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Aspect</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Before</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAspect</span> <span class="token punctuation">&#123;</span><span class="token comment">/**     * 定义方法是实现切面功能     * 要求：     * 1.公共方法 public     * 2.没有返回值 void     * 3.方法名称自定义     * 4.方法可以有参，也可以无参数     *      如果有参数，参数不是自定义的     */</span>    <span class="token comment">/*@Before(value ="execution(public void com.bjpowernode.ba01.SomeServiceImpl.doSome(String,Integer))" )    public void myBefore()&#123;        System.out.println("前置通知;切面功能:在目标方法之前输出执行时间:"+new Date());    &#125;*/</span>    <span class="token comment">/**     * 指定通知方法中的参数： JoinPoint     * 作用：在通知方法中获取方法执行时的信息，例如方法名称，方法实参     * 若切面功能中需要用到方法的信息，就加入JoinPoint     * 必须是第一个位置的参数     */</span>    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">"execution(void *..SomeServiceImpl.doSome(String,Integer))"</span> <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myBefore2</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"方法的签名:"</span><span class="token operator">+</span>joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"方法名称:"</span><span class="token operator">+</span>joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> arg <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"参数:"</span><span class="token operator">+</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2===前置通知;切面功能:在目标方法之前输出执行时间:"</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*@Before(value ="execution(* *..SomeServiceImpl.*(..))" )    public void myBefore3()&#123;        System.out.println("3====前置通知;切面功能:在目标方法之前输出执行时间:"+new Date());    &#125;    @Before(value ="execution(* do*(..))" )    public void myBefore4()&#123;        System.out.println("4====前置通知;切面功能:在目标方法之前输出执行时间:"+new Date());    &#125;*/</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>applicationContext.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>someService<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba07.SomeServiceImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myAspect<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.ba07.MyAspect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span> <span class="token attr-name">proxy-target-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>MyTest01</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest01</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> config<span class="token operator">=</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SomeService</span> someService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">)</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"someService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        someService<span class="token punctuation">.</span><span class="token function">doSome</span><span class="token punctuation">(</span><span class="token string">"lisi"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">方法的签名<span class="token operator">:</span><span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>ba01<span class="token punctuation">.</span></span>SomeServiceImpl</span><span class="token punctuation">.</span><span class="token function">doSome</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>方法名称<span class="token operator">:</span>doSome参数<span class="token operator">:</span>lisi参数<span class="token operator">:</span><span class="token number">20</span><span class="token number">2</span><span class="token operator">==</span><span class="token operator">=</span>前置通知<span class="token punctuation">;</span>切面功能<span class="token operator">:</span>在目标方法之前输出执行时间<span class="token operator">:</span><span class="token class-name">Fri</span> <span class="token class-name">Feb</span> <span class="token number">25</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">20</span> CST <span class="token number">2022</span>目标方法doSome<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyAspect 后置通知</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">JoinPoint</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AfterReturning</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Aspect</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Before</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAspect</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 定义方法是实现切面功能     * 要求：     * 1.公共方法 public     * 2.没有返回值 void     * 3.方法名称自定义     * 4.方法要有参数 推荐 Object res     * 特点：     * 1.在目标方法之后执行     * 2.能够获取到目标方法的返回值，可以根据这个返回值做不同的处理功能     * Object res  = doOther     * 3.可以修改这个返回值     */</span>    <span class="token comment">/**     * @AfterReturning:后置通知     * @param res     */</span>    <span class="token annotation punctuation">@AfterReturning</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doOther(..))"</span><span class="token punctuation">,</span>returning <span class="token operator">=</span> <span class="token string">"res"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myAfterReturning</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">,</span><span class="token class-name">Object</span> res<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"后置通知:方法的定义:"</span><span class="token operator">+</span>joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"后置通知:方法名称:"</span><span class="token operator">+</span>joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"后置通知:在目标方法之后执行的,获取的返回值是:"</span><span class="token operator">+</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res<span class="token operator">=</span><span class="token string">"Hello Aspectj"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyAspect 环绕通知</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">JoinPoint</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">ProceedingJoinPoint</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AfterReturning</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Around</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Aspect</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAspect</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * - 在目标方法前后都能增加功能     * - 控制目标方法是否被调用执行     * - 修改原来目标方法的执行结果，影响最后的调用结果     *   ProceedingJoinPoint 执行目标方法     *   返回值：目标方法的执行结果，可以被修改     */</span>    <span class="token comment">/**     * 环绕通知     * @param proceedingJoinPoint     * @return     */</span>    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doFirst(..))"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">myAround</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> proceedingJoinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> proceedingJoinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> args<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">Object</span> arg <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> arg<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Object</span> res <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知:在目标方法执行之前,输出时间"</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"zhangsan"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//等同于method.invoke</span>            res <span class="token operator">=</span> proceedingJoinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"环绕通知,在目标方法之后,提交事务"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            res <span class="token operator">=</span> <span class="token string">"Hello Aspectj AOP"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MyAspect 异常通知</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">ProceedingJoinPoint</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AfterThrowing</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Around</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Aspect</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Aspect</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAspect</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * 异常通知     *  1.public     *  2.没有返回值     *  3.方法名称自定义     *  4.参数有一个Exception 和 JoinPoint     *  属性：value 切入点表达式     *        throwing 自定义变量，表示方法抛出的异常对象     *        变量名和方法参数名一样     *   特点：     *   1.在目标方法抛出异常时执行     *   2.做异常监控程序     * @param ex     */</span>    <span class="token annotation punctuation">@AfterThrowing</span><span class="token punctuation">(</span>            value <span class="token operator">=</span> <span class="token string">"execution(* *..SomeServiceImpl.doSecond(..))"</span><span class="token punctuation">,</span> throwing <span class="token operator">=</span> <span class="token string">"ex"</span>    <span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myAfterException</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"异常通知,方法发生异常时执行:"</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;IOC-控制反转&quot;&gt;&lt;a href=&quot;#IOC-控制反转&quot; class=&quot;headerlink&quot; title=&quot;IOC 控制反转&quot;&gt;&lt;/a&gt;IOC 控制反转&lt;/h3&gt;&lt;p&gt;描述：把对象的创建，赋值，管理工作都交给代码之外的容器实现，也就是对象的创建是由其他外部资源</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="spring" scheme="https://shaoshaossm.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>java实用小功能案例</title>
    <link href="https://shaoshaossm.github.io/2022-02-22-java-shi-yong-xiao-gong-neng-an-li.html"/>
    <id>https://shaoshaossm.github.io/2022-02-22-java-shi-yong-xiao-gong-neng-an-li.html</id>
    <published>2022-02-22T07:03:12.000Z</published>
    <updated>2022-02-22T07:57:55.678Z</updated>
    
    <content type="html"><![CDATA[<h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 生成2-6之间的随机数</span><span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> num <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">// Math 类中的 random 方法返回一个 [0.0, 1.0) 区间的 double 值。下面这段代码能得到一个 min 和 max 之间的随机数：</span><span class="token keyword">int</span> randomWithMathRandom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [3-1)</span><span class="token keyword">int</span> randomWithMathRandom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> <span class="token class-name">ZiMu</span> <span class="token operator">=</span> <span class="token string">"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGJKLZXCVBNM1234567890"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">ZiMu</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token class-name">ZiMu</span><span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">+=</span> c<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Date</span> dNow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SimpleDateFormat</span> ft <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span> <span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前时间为: "</span> <span class="token operator">+</span> ft<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>dNow<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;随机数&quot;&gt;&lt;a href=&quot;#随机数&quot; class=&quot;headerlink&quot; title=&quot;随机数&quot;&gt;&lt;/a&gt;随机数&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-java&quot; data-language=&quot;java&quot;&gt;&lt;code cl</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="java" scheme="https://shaoshaossm.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Excel自动化办公</title>
    <link href="https://shaoshaossm.github.io/2022-02-16-excel-zi-dong-hua-ban-gong.html"/>
    <id>https://shaoshaossm.github.io/2022-02-16-excel-zi-dong-hua-ban-gong.html</id>
    <published>2022-02-16T04:29:02.000Z</published>
    <updated>2022-02-18T04:39:15.157Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token assign-left variable">openpyxl</span><span class="token operator">==</span><span class="token number">3.0</span>.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxl<span class="token keyword">print</span><span class="token punctuation">(</span>openpyxl<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token comment"># 用openpyxl读取excel表格</span>wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'信息表.xlsx'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token comment"># 获取工作蒲sheet表名称</span>sheet1 <span class="token operator">=</span> wb<span class="token punctuation">.</span>sheetnames<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"sheet表名称:\n"</span><span class="token punctuation">,</span> sheet1<span class="token punctuation">)</span><span class="token comment"># 获取指定sheet对象</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'基本信息'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token comment"># 获取活动表(目前活动的表)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>active<span class="token punctuation">)</span><span class="token comment"># 从表中获取单元格</span>cell <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'A4'</span><span class="token punctuation">]</span>  <span class="token comment"># 创建一个cell对象</span><span class="token comment"># 参数</span><span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">)</span>  <span class="token comment"># value:cell中存储的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>row<span class="token punctuation">)</span>  <span class="token comment"># 行索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>column<span class="token punctuation">)</span>  <span class="token comment"># 列索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>coordinate<span class="token punctuation">)</span>  <span class="token comment"># 坐标</span><span class="token comment"># 用字母指定行列</span><span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> column<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment">#  遍历一个矩形区域中的所有cell对象</span><span class="token keyword">for</span> cell_row <span class="token keyword">in</span> sheet<span class="token punctuation">[</span><span class="token string">'A3'</span><span class="token punctuation">:</span><span class="token string">'D8'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> cell_row<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>coordinate<span class="token punctuation">,</span> cell<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 访问特定行或列的单元格的值,利用worksheet对象的rows和column属性</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> cell <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 获取工作表中最大行和最大列的数量</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------------------'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>max_row<span class="token punctuation">,</span> sheet<span class="token punctuation">.</span>max_column<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxl<span class="token punctuation">,</span> pprint<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'opening workbook...'</span><span class="token punctuation">)</span>wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'人口统计简易表.xlsx'</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'人口统计表'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>sheetnames<span class="token punctuation">)</span><span class="token comment"># countryData将包含计算的每个县的总人口和普查区数目</span>countyData <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Reading rows...'</span><span class="token punctuation">)</span><span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> sheet<span class="token punctuation">.</span>max_row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    state <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'B'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value    county <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'C'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value    pop <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'D'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value    countyData<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    countyData<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span>county<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">'tracts'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'pop'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    countyData<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">[</span>county<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tracts'</span><span class="token punctuation">]</span><span class="token operator">+=</span><span class="token number">1</span>    countyData<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">[</span>county<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'pop'</span><span class="token punctuation">]</span><span class="token operator">+=</span><span class="token builtin">int</span><span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Writing results...'</span><span class="token punctuation">)</span>resultFile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'census2022.py'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># 将countyData数据写入到addData字典中</span>resultFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'allData = '</span><span class="token operator">+</span>pprint<span class="token punctuation">.</span>pformat<span class="token punctuation">(</span>countyData<span class="token punctuation">)</span><span class="token punctuation">)</span>resultFile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Done'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-py" data-language="py"><code class="language-py"><span class="token keyword">import</span> os<span class="token keyword">import</span> census2022<span class="token keyword">print</span><span class="token punctuation">(</span>census2022<span class="token punctuation">.</span>allData<span class="token punctuation">[</span><span class="token string">'AL'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'FT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="写入数据基本操作"><a href="#写入数据基本操作" class="headerlink" title="写入数据基本操作"></a>写入数据基本操作</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>sheetnames<span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>active<span class="token comment"># 设置sheet名称</span>sheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'跟进记录表'</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>sheetnames<span class="token punctuation">)</span><span class="token comment"># 保存</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'第一个工作蒲.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 创建和删除工作表</span>wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'第一个工作蒲.xlsx'</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>create_sheet<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">'销售记录'</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>create_sheet<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'养殖记录'</span><span class="token punctuation">)</span>  <span class="token comment"># 下标为1的位置</span><span class="token keyword">del</span> wb<span class="token punctuation">[</span><span class="token string">'养殖记录'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>sheetnames<span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'第一个工作蒲.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 写入数据</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'销售记录'</span><span class="token punctuation">]</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'hello'</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'world'</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'第一个工作蒲.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="定向修改数据"><a href="#定向修改数据" class="headerlink" title="定向修改数据"></a>定向修改数据</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'电子产品价格表.xlsx'</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'Sheet1'</span><span class="token punctuation">]</span>PRICE_UPDATES <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'苹果'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                 <span class="token string">'香蕉'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>                 <span class="token string">'橘子'</span><span class="token punctuation">:</span> <span class="token number">5</span>                 <span class="token punctuation">&#125;</span><span class="token keyword">for</span> rowNum <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> sheet<span class="token punctuation">.</span>max_row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    productName <span class="token operator">=</span> sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span>rowNum<span class="token punctuation">,</span> column<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value    <span class="token keyword">if</span> productName <span class="token keyword">in</span> PRICE_UPDATES<span class="token punctuation">:</span>        sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row<span class="token operator">=</span>rowNum<span class="token punctuation">,</span> column<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> PRICE_UPDATES<span class="token punctuation">[</span>productName<span class="token punctuation">]</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'updateProductsSales.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="单元格样式制定"><a href="#单元格样式制定" class="headerlink" title="单元格样式制定"></a>单元格样式制定</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl<span class="token punctuation">.</span>styles <span class="token keyword">import</span> Font<span class="token punctuation">,</span> PatternFill<span class="token punctuation">,</span> Side<span class="token punctuation">,</span> Border<span class="token punctuation">,</span> Alignment<span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'字体'</span><span class="token comment"># italic: 斜体 underline: 下划线 b: 加粗 color: RGB值</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>font <span class="token operator">=</span> Font<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'楷体'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'8470FF'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> italic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> underline<span class="token operator">=</span><span class="token string">'single'</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># cell填充色</span>sheet<span class="token punctuation">[</span><span class="token string">'A2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fill <span class="token operator">=</span> PatternFill<span class="token punctuation">(</span>patternType<span class="token operator">=</span><span class="token string">'solid'</span><span class="token punctuation">,</span> fgColor<span class="token operator">=</span><span class="token string">'8470FF'</span><span class="token punctuation">)</span><span class="token comment"># 设置边框样式</span>sheet<span class="token punctuation">[</span><span class="token string">'A4'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'效果1'</span>sheet<span class="token punctuation">[</span><span class="token string">'A5'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'效果2'</span>s1 <span class="token operator">=</span> Side<span class="token punctuation">(</span>style<span class="token operator">=</span><span class="token string">'thin'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'8470FF'</span><span class="token punctuation">)</span>s2 <span class="token operator">=</span> Side<span class="token punctuation">(</span>style<span class="token operator">=</span><span class="token string">'double'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'8470FF'</span><span class="token punctuation">)</span>sheet<span class="token punctuation">[</span><span class="token string">'A4'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>border <span class="token operator">=</span> Border<span class="token punctuation">(</span>top<span class="token operator">=</span>s1<span class="token punctuation">)</span>sheet<span class="token punctuation">[</span><span class="token string">'A5'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>border <span class="token operator">=</span> Border<span class="token punctuation">(</span>top<span class="token operator">=</span>s2<span class="token punctuation">,</span> bottom<span class="token operator">=</span>s1<span class="token punctuation">,</span> left<span class="token operator">=</span>s2<span class="token punctuation">,</span> right<span class="token operator">=</span>s1<span class="token punctuation">)</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'效果1'</span>sheet<span class="token punctuation">[</span><span class="token string">'B2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'效果2'</span>sheet<span class="token punctuation">[</span><span class="token string">'B3'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'效果3'</span>B1 <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">(</span>horizontal<span class="token operator">=</span><span class="token string">'right'</span><span class="token punctuation">)</span>B2 <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'B2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">(</span>horizontal<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">)</span>B3 <span class="token operator">=</span> sheet<span class="token punctuation">[</span><span class="token string">'B3'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">(</span>horizontal<span class="token operator">=</span><span class="token string">'general'</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'styles.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据过滤"><a href="#数据过滤" class="headerlink" title="数据过滤"></a>数据过滤</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl<span class="token punctuation">.</span>styles <span class="token keyword">import</span> Alignment<span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'数据筛选表.xlsx'</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'Sheet1'</span><span class="token punctuation">]</span>sheet<span class="token punctuation">.</span>auto_filter<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token string">'A1:D4'</span><span class="token comment"># add_filter_culumn 参数1：指定列 参数2：筛选内容</span>sheet<span class="token punctuation">.</span>auto_filter<span class="token punctuation">.</span>add_filter_column<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'北京'</span><span class="token punctuation">,</span> <span class="token string">'上海'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># add_sort_condition 参数1: 指定区域 参数2：升降序</span>sheet<span class="token punctuation">.</span>auto_filter<span class="token punctuation">.</span>add_sort_condition<span class="token punctuation">(</span>ref<span class="token operator">=</span><span class="token string">'D2:D4'</span><span class="token punctuation">,</span> descending<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'数据筛选表.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">200</span>sheet<span class="token punctuation">[</span><span class="token string">'A2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>sheet<span class="token punctuation">[</span><span class="token string">'A3'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'=SUM(A1:A2)'</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'sum.xlsx'</span><span class="token punctuation">)</span>wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'sum.xlsx'</span><span class="token punctuation">,</span>read_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>active<span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">[</span><span class="token string">'A3'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="单元格"><a href="#单元格" class="headerlink" title="单元格"></a>单元格</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span><span class="token string">'行和列.xlsx'</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'Sheet1'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>row_dimensions<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>column_dimensions<span class="token punctuation">)</span><span class="token comment"># 设置行高</span>sheet<span class="token punctuation">.</span>row_dimensions<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">50</span><span class="token comment"># 设置列宽</span>sheet<span class="token punctuation">.</span>column_dimensions<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">80</span><span class="token comment"># 合并</span>sheet<span class="token punctuation">.</span>merge_cells<span class="token punctuation">(</span><span class="token string">'D1:G5'</span><span class="token punctuation">)</span>sheet<span class="token punctuation">[</span><span class="token string">'D1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'hello'</span><span class="token comment"># 拆分</span>sheet<span class="token punctuation">.</span>unmerge_cells<span class="token punctuation">(</span><span class="token string">'D1:G5'</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'行和列.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=</summary>
      
    
    
    
    <category term="office" scheme="https://shaoshaossm.github.io/categories/office/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Open-CV图像处理</title>
    <link href="https://shaoshaossm.github.io/2022-01-14-open-cv-tu-xiang-chu-li.html"/>
    <id>https://shaoshaossm.github.io/2022-01-14-open-cv-tu-xiang-chu-li.html</id>
    <published>2022-01-14T06:24:08.000Z</published>
    <updated>2022-02-21T11:10:29.281Z</updated>
    
    <content type="html"><![CDATA[<h3 id="几何变换"><a href="#几何变换" class="headerlink" title="几何变换"></a>几何变换</h3><h4 id="图像缩放"><a href="#图像缩放" class="headerlink" title="图像缩放"></a>图像缩放</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#%%</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 绝对尺寸  esc + m</span>rows<span class="token punctuation">,</span>cols <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment">#%%</span>rows<span class="token comment">#%%</span>cols<span class="token comment">#%%</span>res <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>cols<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>res<span class="token punctuation">.</span>shape<span class="token comment">#%%</span>res1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">,</span>fx<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>fy<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>res1<span class="token punctuation">.</span>shape<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像平移"><a href="#图像平移" class="headerlink" title="图像平移"></a>图像平移</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% md</span><span class="token comment"># 图像平移</span><span class="token comment">#%%</span>rows<span class="token comment">#%%</span>M <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>res2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>res2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像旋转"><a href="#图像旋转" class="headerlink" title="图像旋转"></a>图像旋转</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span>M <span class="token operator">=</span> cv<span class="token punctuation">.</span>getRotationMatrix2D<span class="token punctuation">(</span><span class="token punctuation">(</span>cols<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>rows<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token comment">#%%</span>res3 <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像仿射变换"><a href="#图像仿射变换" class="headerlink" title="图像仿射变换"></a>图像仿射变换</h4><p>图像的仿射变换涉及到图像的形状位置角度的变化，是深度学习预处理中常到的功能,仿射变换主要是对图像的缩放，旋转，翻转和平移等操作的组合。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 2.1 创建变换矩阵</span>pts1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pts2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>M <span class="token operator">=</span> cv<span class="token punctuation">.</span>getAffineTransform<span class="token punctuation">(</span>pts1<span class="token punctuation">,</span>pts2<span class="token punctuation">)</span><span class="token comment"># 2.2 完成仿射变换</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span>M<span class="token punctuation">,</span><span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像的投射变换"><a href="#图像的投射变换" class="headerlink" title="图像的投射变换"></a>图像的投射变换</h4><p>透射变换是视角变化的结果，是指利用透视中心、像点、目标点三点共线的条件，按透视旋转定律使承影面（透视面）绕迹线（透视轴）旋转某一角度，破坏原有的投影光线束，仍能保持承影面上投影几何图形不变的变换。</p><p>它的本质将图像投影到一个新的视平面</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 2.1 创建变换矩阵</span>pts1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">368</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">387</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">389</span><span class="token punctuation">,</span><span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pts2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">310</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>T <span class="token operator">=</span> cv<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span>pts1<span class="token punctuation">,</span>pts2<span class="token punctuation">)</span><span class="token comment"># 2.2 进行变换</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpPerspective<span class="token punctuation">(</span>img<span class="token punctuation">,</span>T<span class="token punctuation">,</span><span class="token punctuation">(</span>cols<span class="token punctuation">,</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像的金字塔"><a href="#图像的金字塔" class="headerlink" title="图像的金字塔"></a>图像的金字塔</h4><p>图像金字塔是图像多尺度表达的一种，最主要用于图像的分割，是一种以多分辨率来解释图像的有效但概念简单的结构。</p><p>图像金字塔用于机器视觉和图像压缩，一幅图像的金字塔是一系列以金字塔形状排列的分辨率逐步降低，且来源于同一张原始图的图像集合。其通过梯次向下采样获得，直到达到某个终止条件才停止采样。</p><p>金字塔的底部是待处理图像的高分辨率表示，而顶部是低分辨率的近似，层级越高，图像越小，分辨率越低。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">imgup <span class="token operator">=</span> cv<span class="token punctuation">.</span>pyrUp<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imgup<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>imgdown <span class="token operator">=</span> cv<span class="token punctuation">.</span>pyrDown<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imgdown<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>总结</strong></p><ol><li><p>图像缩放：对图像进行放大或缩小</p><p><code>cv.resize()</code></p></li><li><p>图像平移：</p><p>指定平移矩阵后，调用<code>cv.warpAffine()</code>平移图像</p></li><li><p>图像旋转：</p><p>调用<code>cv.getRotationMatrix2D</code>获取旋转矩阵，然后调用<code>cv.warpAffine()</code>进行旋转</p></li><li><p>仿射变换：</p><p>调用<code>cv.getAffineTransform</code>将创建变换矩阵，最后该矩阵将传递给<code>cv.warpAffine()</code>进行变换</p></li><li><p>透射变换：</p><p>通过函数<code>cv.getPerspectiveTransform()</code>找到变换矩阵，将<code>cv.warpPerspective()</code>进行投射变换</p></li><li><p>金字塔</p><p>图像金字塔是图像多尺度表达的一种，使用的API：</p><p><code>cv.pyrUp()</code>: 向上采样</p><p><code>cv.pyrDown()</code>: 向下采样</p></li></ol><h3 id="形态学操作"><a href="#形态学操作" class="headerlink" title="形态学操作"></a>形态学操作</h3><h4 id="连通性"><a href="#连通性" class="headerlink" title="连通性"></a>连通性</h4><p><img src="https://img-blog.csdnimg.cn/df2470c5480f4cce902391e7206ffd49.png" alt="4,8,D邻接"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;几何变换&quot;&gt;&lt;a href=&quot;#几何变换&quot; class=&quot;headerlink&quot; title=&quot;几何变换&quot;&gt;&lt;/a&gt;几何变换&lt;/h3&gt;&lt;h4 id=&quot;图像缩放&quot;&gt;&lt;a href=&quot;#图像缩放&quot; class=&quot;headerlink&quot; title=&quot;图像缩放&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="图像处理" scheme="https://shaoshaossm.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
    <category term="OpenCV" scheme="https://shaoshaossm.github.io/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>open-CV的初步学习</title>
    <link href="https://shaoshaossm.github.io/2022-01-12-open-cv-de-chu-bu-xue-xi.html"/>
    <id>https://shaoshaossm.github.io/2022-01-12-open-cv-de-chu-bu-xue-xi.html</id>
    <published>2022-01-12T08:30:04.000Z</published>
    <updated>2022-02-21T11:10:16.235Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装指定版本</span>pip <span class="token function">install</span> opencv-python<span class="token operator">==</span><span class="token number">3.4</span>.2.17<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 测试是否安装成功</span><span class="token keyword">import</span> cv2lena  <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"1.jpg"</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span>lena<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 利用SIFT和SURF等进行特征提取</span>pip <span class="token function">install</span> opencv-contrib-python<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Open-CV基本操作"><a href="#Open-CV基本操作" class="headerlink" title="Open-CV基本操作"></a>Open-CV基本操作</h3><h4 id="图像的基础操作"><a href="#图像的基础操作" class="headerlink" title="图像的基础操作"></a>图像的基础操作</h4><ul><li>图像的IO操作，读取和保存方法</li><li>在图像上绘制几何图形</li><li>怎么获取图像的属性</li><li>怎么访问图像的像素，进行通道分离，合并等</li><li>怎么实现颜色空间的变换</li><li>图像的算术运算</li></ul><h4 id="1-1-读取图像"><a href="#1-1-读取图像" class="headerlink" title="1.1 读取图像"></a>1.1 读取图像</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">lena  <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>读取方式的标志</p><ul><li><p>cv.IMREAD*COLOR：以彩色模式加载图像，任何图像的透明度都将被忽略。这是默认参数。</p></li><li><p>cv.IMREAD*GRAYSCALE：以灰度模式加载图像</p></li><li><p>cv.IMREAD_UNCHANGED：包括alpha通道的加载图像模式。</p><p><strong>可以使用1、0或者-1来替代上面三个标志</strong></p></li></ul></li><li><p>参考代码</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 以灰度图的形式读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="1-2-显示图像"><a href="#1-2-显示图像" class="headerlink" title="1.2 显示图像"></a>1.2 显示图像</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>显示图像的窗口名称，以字符串类型表示</li><li>要加载的图像</li></ul><p><strong>注意：在调用显示图像的API后，要调用cv.waitKey()给图像绘制留下时间，否则窗口会出现无响应情况，并且图像无法显示出来</strong>。</p><ul><li>参考代码</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2lena  <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"1.jpg"</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span>lena<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-保存图像"><a href="#1-3-保存图像" class="headerlink" title="1.3 保存图像"></a>1.3 保存图像</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>文件名，要保存在哪里</li><li>要保存的图像</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'2.jpg'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-4-完整代码演示"><a href="#1-4-完整代码演示" class="headerlink" title="1.4 完整代码演示"></a>1.4 完整代码演示</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2 显示图像</span><span class="token comment"># 2.1 利用opencv展示图像</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token comment"># 2.2 在matplotplotlib中展示图像</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 结束</span><span class="token comment"># cv.destroyAllWindows()</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'匹配结果'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>k <span class="token operator">=</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 3 保存图像</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'2.jpg'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绘制几何图形"><a href="#绘制几何图形" class="headerlink" title="绘制几何图形"></a>绘制几何图形</h3><h4 id="2-1-绘制直线"><a href="#2-1-绘制直线" class="headerlink" title="2.1 绘制直线"></a>2.1 绘制直线</h4><pre class="line-numbers language-none"><code class="language-none">cv.line(img,start,end,color,thickness)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>img:要绘制直线的图像</li><li>Start,end: 直线的起点和终点</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度</li></ul><h4 id="2-2-绘制圆形"><a href="#2-2-绘制圆形" class="headerlink" title="2.2 绘制圆形"></a>2.2 绘制圆形</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span>centerpoint<span class="token punctuation">,</span> r<span class="token punctuation">,</span> color<span class="token punctuation">,</span> thickness<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>img:要绘制圆形的图像</li><li>Centerpoint, r: 圆心和半径</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度，为-1时生成闭合图案并填充颜色</li></ul><h4 id="2-3-绘制矩形"><a href="#2-3-绘制矩形" class="headerlink" title="2.3 绘制矩形"></a>2.3 绘制矩形</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span>leftupper<span class="token punctuation">,</span>rightdown<span class="token punctuation">,</span>color<span class="token punctuation">,</span>thickness<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>img:要绘制矩形的图像</li><li>Leftupper, rightdown: 矩形的左上角和右下角坐标</li><li>color: 线条的颜色</li><li>Thickness: 线条宽度</li></ul><h4 id="2-4-向图像中添加文字"><a href="#2-4-向图像中添加文字" class="headerlink" title="2.4 向图像中添加文字"></a>2.4 向图像中添加文字</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span>text<span class="token punctuation">,</span>station<span class="token punctuation">,</span> font<span class="token punctuation">,</span> fontsize<span class="token punctuation">,</span>color<span class="token punctuation">,</span>thickness<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>img: 图像</li><li>text：要写入的文本数据</li><li>station：文本的放置位置</li><li>font：字体</li><li>Fontsize :字体大小</li></ul><h4 id="2-5-效果演示"><a href="#2-5-效果演示" class="headerlink" title="2.5 效果演示"></a>2.5 效果演示</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 创建一个空白的图像</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 2 绘制图形</span>cv<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">511</span><span class="token punctuation">,</span><span class="token number">511</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">511</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">511</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">384</span><span class="token punctuation">,</span><span class="token number">384</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">510</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>font <span class="token operator">=</span> cv<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXcv<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token string">'OpenCV'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>cv<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'匹配结果'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/64cc9aa678134e3c947b644b6a6aec72.png" alt="效果展示"></p><h3 id="3-获取并修改图像中的像素点"><a href="#3-获取并修改图像中的像素点" class="headerlink" title="3.获取并修改图像中的像素点"></a>3.获取并修改图像中的像素点</h3><p>我们可以通过行和列的坐标值获取该像素点的像素值。对于BGR图像，它返回一个蓝，绿，红值的数组。对于灰度图像，仅返回相应的强度值。使用相同的方法对像素值进行修改。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'messi5.jpg'</span><span class="token punctuation">)</span><span class="token comment"># 获取某个像素点的值</span>px <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token comment"># 仅获取蓝色通道的强度值</span>blue <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment"># 修改某个位置的像素值</span>img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-获取图像的属性"><a href="#4-获取图像的属性" class="headerlink" title="4 获取图像的属性"></a>4 获取图像的属性</h3><p>图像属性包括行数，列数和通道数，图像数据类型，像素数等。</p><table><thead><tr><th>属性</th><th>API</th></tr></thead><tbody><tr><td>形状</td><td>img.shape</td></tr><tr><td>图像大小</td><td>img.size</td></tr><tr><td>数据类型</td><td>img.dtype</td></tr></tbody></table><h3 id="5-图像通道的拆分与合并"><a href="#5-图像通道的拆分与合并" class="headerlink" title="5 图像通道的拆分与合并"></a>5 图像通道的拆分与合并</h3><p>有时需要在B，G，R通道图像上单独工作。在这种情况下，需要将BGR图像分割为单个通道。或者在其他情况下，可能需要将这些单独的通道合并到BGR图像。你可以通过以下方式完成。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 通道拆分</span>b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>r <span class="token operator">=</span> cv<span class="token punctuation">.</span>split<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment"># 通道合并</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-色彩空间的改变"><a href="#6-色彩空间的改变" class="headerlink" title="6 色彩空间的改变"></a>6 色彩空间的改变</h3><p>OpenCV中有150多种颜色空间转换方法。最广泛使用的转换方法有两种，BGR↔Gray和BGR↔HSV。</p><p>API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>input_image，flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数：</p><ul><li>input_image: 进行颜色空间转换的图像</li><li>flag: 转换类型<ul><li>cv.COLOR_BGR2GRAY : BGR↔Gray</li><li>cv.COLOR_BGR2HSV: BGR→HSV</li></ul></li></ul><h4 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#%%</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token comment">#%%</span>img<span class="token punctuation">.</span>shape<span class="token comment">#%%</span>img<span class="token punctuation">.</span>dtype<span class="token comment">#%%</span>img<span class="token punctuation">.</span>size<span class="token comment">#%%</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>r <span class="token operator">=</span> cv<span class="token punctuation">.</span>split<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>b<span class="token punctuation">,</span>cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token comment">#%%</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>gray  <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>gray<span class="token punctuation">,</span>cmap<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="算数操作"><a href="#算数操作" class="headerlink" title="算数操作"></a>算数操作</h3><h4 id="1-图像加法"><a href="#1-图像加法" class="headerlink" title="1.图像加法"></a>1.图像加法</h4><p>代码演示</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#%%</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>imggray <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'2.jpg'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imggray<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img<span class="token punctuation">,</span>imggray<span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两种结果对比(Opencv更好一点)</p><p><img src="https://img-blog.csdnimg.cn/1533667874f24412a2c886f858f3e7fa.png" alt="OpenCV"><img src="https://img-blog.csdnimg.cn/f026174e259d43abba3ce2c79365a703.png" alt="Numpy"></p><h4 id="2-图像的混合"><a href="#2-图像的混合" class="headerlink" title="2.图像的混合"></a>2.图像的混合</h4><p>这其实也是加法，但是不同的是两幅图像的权重不同，这就会给人一种混合或者透明的感觉。图像混合的计算公式如下：</p><blockquote><p>g(x) = (1−α)f0(x) + αf1(x)</p></blockquote><p>通过修改 α 的值（0 → 1）,实现不同权重的图像混合</p><p>参考代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span>img4 <span class="token operator">=</span> cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">,</span>imggray<span class="token punctuation">,</span><span class="token number">0.6</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img4<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/9a7b1bc9fd0d4be18ffda46ea54982b9.png" alt="图像混合"></p><blockquote><p>注意：这里都要求两幅图像是相同大小的。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=</summary>
      
    
    
    
    <category term="图像处理" scheme="https://shaoshaossm.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
    <category term="OpenCV" scheme="https://shaoshaossm.github.io/tags/OpenCV/"/>
    
  </entry>
  
  <entry>
    <title>centos7程序启动命令合集</title>
    <link href="https://shaoshaossm.github.io/2021-12-20-centos7-cheng-xu-qi-dong-ming-ling-he-ji.html"/>
    <id>https://shaoshaossm.github.io/2021-12-20-centos7-cheng-xu-qi-dong-ming-ling-he-ji.html</id>
    <published>2021-12-20T14:34:10.000Z</published>
    <updated>2021-12-21T03:18:05.606Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./redis-server <span class="token punctuation">..</span>/redis.conf <span class="token operator">&amp;</span>./redis-cli -a <span class="token number">123456</span> -h <span class="token number">192.168</span>.174.131./zkServer.sh start<span class="token punctuation">[</span>root@localhost sbin<span class="token punctuation">]</span><span class="token comment"># ./nginx -c /usr/java/nginx/conf/nginx.conf</span>./mysqld_safe <span class="token operator">&amp;</span><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nohup java -jar  /usr/java/jenkins/jenkins.war >/usr/java/jenkins/jenkins.out &amp;</span><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /root/.jenkins/secrets/initialAdminPassword</span>密码:6ffe5db2ab1e4110ac62a31ee93a6039fdfs_trackerd /etc/fdfs/tracker.conffdfs_storaged /etc/fdfs/storage.conf/usr/java/nginx_fdfs/sbin/nginx -c /usr/java/nginx_fdfs/conf/nginx.confnginx Windows版启动 nginx.exe 关闭:nginx.exe -s stop<span class="token punctuation">[</span>root@localhost java<span class="token punctuation">]</span><span class="token comment"># rabbitmq-server start &amp;</span>systemctl start dockerdocker run -it centos /bin/bashF:<span class="token punctuation">\</span>elasticsearch<span class="token punctuation">\</span>elasticsearch-head-master<span class="token operator">></span>cnpm <span class="token function">install</span>F:<span class="token punctuation">\</span>elasticsearch<span class="token punctuation">\</span>elasticsearch-head-master<span class="token operator">></span>npm run startcanal  ./startup.sh清理浏览器缓存 ctrl <span class="token builtin class-name">shift</span> del下载文件到桌面 sz 文件名上传文件 rz -y<span class="token punctuation">(</span>覆盖<span class="token punctuation">)</span>git@github.com:1600767556/mybatis.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;
./redis-server &lt;span class=&quot;token punctuation&quot;&gt;..&lt;</summary>
      
    
    
    
    <category term="系统配置" scheme="https://shaoshaossm.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="centos" scheme="https://shaoshaossm.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>系统重装后需要配置的地方</title>
    <link href="https://shaoshaossm.github.io/2021-12-20-xi-tong-chong-zhuang-hou-xu-yao-pei-zhi-de-di-fang.html"/>
    <id>https://shaoshaossm.github.io/2021-12-20-xi-tong-chong-zhuang-hou-xu-yao-pei-zhi-de-di-fang.html</id>
    <published>2021-12-20T14:10:32.000Z</published>
    <updated>2022-01-13T09:05:10.120Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需要安装的软件"><a href="#需要安装的软件" class="headerlink" title="需要安装的软件"></a>需要安装的软件</h3><ul><li>google</li><li>7-zip</li><li>MySQL8.0+Navicat</li><li>pycharm</li><li>IDEA破解</li><li>office+visio</li><li>Typora</li><li>vmware16</li><li>搜狗输入法</li><li>TIM</li><li>更新<code>pip</code>到最新版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python -m pip <span class="token function">install</span> --upgrade pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="需要配置的环境变量"><a href="#需要配置的环境变量" class="headerlink" title="需要配置的环境变量"></a>需要配置的环境变量</h3><ul><li>jdk</li><li>git</li><li>node</li><li>Maven</li><li>anaconda</li></ul><p><img src="https://img-blog.csdnimg.cn/34071642a9754bd7a66ac9923eb69267.png" alt="JAVA&amp;MAVEN"></p><p><img src="https://img-blog.csdnimg.cn/5e0deccd8f7a464b8a2072e62752e51f.png" alt="环境变量"></p><h3 id="需要登录的账号"><a href="#需要登录的账号" class="headerlink" title="需要登录的账号"></a>需要登录的账号</h3><ul><li>edge登录</li><li>google登录(用到插件iGG)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;需要安装的软件&quot;&gt;&lt;a href=&quot;#需要安装的软件&quot; class=&quot;headerlink&quot; title=&quot;需要安装的软件&quot;&gt;&lt;/a&gt;需要安装的软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;google&lt;/li&gt;
&lt;li&gt;7-zip&lt;/li&gt;
&lt;li&gt;MySQL8.0+Navi</summary>
      
    
    
    
    <category term="系统配置" scheme="https://shaoshaossm.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Win10" scheme="https://shaoshaossm.github.io/tags/Win10/"/>
    
  </entry>
  
  <entry>
    <title>数据分析三大类库的基本使用</title>
    <link href="https://shaoshaossm.github.io/2021-11-26-shu-ju-fen-xi-san-da-lei-ku-de-ji-ben-shi-yong.html"/>
    <id>https://shaoshaossm.github.io/2021-11-26-shu-ju-fen-xi-san-da-lei-ku-de-ji-ben-shi-yong.html</id>
    <published>2021-11-26T12:19:52.000Z</published>
    <updated>2021-12-02T06:50:24.148Z</updated>
    
    <content type="html"><![CDATA[<h3 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h3><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltarray <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'q'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>img_array <span class="token operator">=</span> plt<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./7.jpg'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_array<span class="token punctuation">)</span> <span class="token comment"># 将numpy数组进行可视化展示</span>img_arraymg <span class="token operator">=</span> img_array <span class="token operator">-</span> <span class="token number">100</span> <span class="token comment"># 将每一个数组元素减100</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_arraymg<span class="token punctuation">)</span> <span class="token comment"># 将numpy数组进行可视化展示</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment"># 一维等差数列数组</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span>step<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 一维等差数列</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>arr<span class="token punctuation">.</span>shape <span class="token comment"># 数组形状</span>arr<span class="token punctuation">.</span>ndim <span class="token comment"># 数组维度</span>arr<span class="token punctuation">.</span>size <span class="token comment"># 数组元素个数</span>arr<span class="token punctuation">.</span>dtype <span class="token comment"># 数组元素类型</span><span class="token builtin">type</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment"># 数组数据类型</span>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dtype <span class="token operator">=</span> <span class="token string">'int32'</span><span class="token punctuation">)</span>arr<span class="token punctuation">.</span>dtypearr<span class="token punctuation">.</span>dtype<span class="token operator">=</span><span class="token string">'uint8'</span>arr<span class="token punctuation">.</span>dtype<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="索引-amp-切片"><a href="#索引-amp-切片" class="headerlink" title="索引&amp;切片"></a>索引&amp;切片</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># arr数组前两行</span>arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># arr数组前两列</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># arr数组前两行和前两列的数组</span>arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># arr数组行倒置</span>arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># arr数组列倒置</span>arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#arr数组行列倒置</span>img_array<span class="token punctuation">.</span>shape <span class="token comment"># 图片行列颜色</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_array<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 图片倒置</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_array<span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">:</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">:</span><span class="token number">1500</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 图片裁剪</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="聚合-amp-矩阵"><a href="#聚合-amp-矩阵" class="headerlink" title="聚合&amp;矩阵"></a>聚合&amp;矩阵</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 二维数组->一维数组</span>arr<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 一维数组->多维</span><span class="token comment"># 级联操作 将多个numpy数组进行横向或纵向拼接</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 0:列</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 1:行</span><span class="token comment"># 图片拼接</span>img_2 <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>img_array2<span class="token punctuation">,</span>img_array2<span class="token punctuation">,</span>img_array2<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img_2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>常用聚合函数 <code>sum，max，min，mean</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 第一列的和</span>arr<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>常用数学函数 <code>sin cos tan </code>,<code>around（a,decimals）</code> a: 数组 decimals：舍入的小数位数，默认为0.如果为负，整数将四舍五入到小数点左侧位置</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>np<span class="token punctuation">.</span>around<span class="token punctuation">(</span><span class="token number">3.8</span><span class="token punctuation">)</span> <span class="token comment"># 四舍五入</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>常用统计函数<ul><li>numpy.amin() 和 numpy.amax() ：用于计算数组中的元素沿指定轴的最小值和最大值</li><li>numpy.ptp()： 最大值和最小值的差</li><li>numpy.median()： 计算数组a中元素的中位数</li><li>标准差 std() ：标准差是一组数据平均值分散程度的一种度量<ul><li>公式：std = sqrt(mean((x-x.mean())**2))</li></ul></li><li>方差 var() ：统计中的方差是每个样本本值与平均数之差平方值的平均数，即标准差就是方差的平方根</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>矩阵</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">a1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a1<span class="token punctuation">,</span>a2<span class="token punctuation">)</span><span class="token comment"># 运行结果</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h3><h4 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h4><ul><li><code>Series</code>是一种类似于一维数组的对象,由两部分组成<ul><li><code>values</code>:一维数组</li><li><code>index</code>:相关的数据索引标签</li></ul></li><li><code>Series</code>的创建<ul><li>由列表或<code>numpy</code>数组创建</li><li>由字典创建</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">from</span> pandas <span class="token keyword">import</span> Seriess <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'four'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npSeries<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token string">'int64'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#%% 用来指定显示缩影</span>s <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'four'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ss<span class="token punctuation">.</span>dtype<span class="token comment">#%% 为什么需要有显示索引</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'语文'</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">,</span>    <span class="token string">'数学'</span><span class="token punctuation">:</span><span class="token number">55</span><span class="token punctuation">,</span>    <span class="token string">'理综'</span><span class="token punctuation">:</span><span class="token number">333</span><span class="token punctuation">&#125;</span>s <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">)</span>s<span class="token comment">#%%</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>s<span class="token punctuation">.</span>语文s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment">#%%</span>s<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>sizes<span class="token punctuation">.</span>indexs<span class="token punctuation">.</span>valuess<span class="token punctuation">.</span>dtype<span class="token comment">#%%</span>s <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 显示前n个数据</span><span class="token comment">#%%</span>s<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 显示后n个元素</span><span class="token comment">#%%</span>s<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span>s<span class="token punctuation">.</span>notnull<span class="token comment">#%%</span><span class="token comment"># Series的算术运算--法则:索引一致的元素进行运算,否则补空</span>s1  <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>s2  <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>s <span class="token operator">=</span> s1<span class="token operator">+</span>s2s<span class="token comment">#%%</span>s<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="DataFram"><a href="#DataFram" class="headerlink" title="DataFram"></a>DataFram</h4><ul><li><code>DataFrame</code>是一个表格型的数据结构,由按一定顺序排列的多列数据组成.既有行索引,也有列索引<ul><li>行索引:<code>index</code></li><li>列索引:<code>columns</code></li><li>值:<code>values</code></li></ul></li><li><code>DataFram</code>的创建<ul><li><code>ndarray</code>创建</li><li>字典创建</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFramedf <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'zhangsna'</span><span class="token punctuation">,</span><span class="token string">'lisi'</span><span class="token punctuation">,</span><span class="token string">'wangwu'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">)</span>df<span class="token comment">#%%</span>df<span class="token punctuation">.</span>valuesdf<span class="token punctuation">.</span>columnsdf<span class="token punctuation">.</span>indexdf<span class="token punctuation">.</span>shapedf<span class="token punctuation">.</span>dtypes<span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'张三'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'李四'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="索引-amp-切片-1"><a href="#索引-amp-切片-1" class="headerlink" title="索引&amp;切片"></a>索引&amp;切片</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFramedf <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'zhangsna'</span><span class="token punctuation">,</span><span class="token string">'lisi'</span><span class="token punctuation">,</span><span class="token string">'wangwu'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">)</span>df<span class="token comment">#%%</span>df<span class="token punctuation">.</span>valuesdf<span class="token punctuation">.</span>columnsdf<span class="token punctuation">.</span>indexdf<span class="token punctuation">.</span>shapedf<span class="token punctuation">.</span>dtypes<span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'张三'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'李四'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>df  <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span><span class="token comment"># 取单列,如果df有显示的索引,通过索引机制去取行或列的时候只能通过显示索引</span>df<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token comment"># 强行使用 行</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">#%%</span><span class="token comment"># 取多列</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># - iloc: 隐式索引取行</span><span class="token comment"># - loc: 显式索引取行</span><span class="token comment"># 取单行</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment"># 取多行</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># 0行3列 单个元素</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token comment"># 多个元素</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment">#%%</span><span class="token comment"># 切行</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># 切列</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h4><ul><li>同Series</li></ul><h4 id="时间数据类型转换"><a href="#时间数据类型转换" class="headerlink" title="时间数据类型转换"></a>时间数据类型转换</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'time'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'2020-10-01'</span><span class="token punctuation">,</span><span class="token string">'2021-11-11'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'temp'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span><span class="token comment">#%% 将time列的数据类型转换成时间序列类型</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>dfdf<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span><span class="token comment">#%% 将time列作为源数据的行索引</span>df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> tushare <span class="token keyword">as</span> ts<span class="token comment">#%% 获取某只股票的历史行情数据</span>df  <span class="token operator">=</span>ts<span class="token punctuation">.</span>get_k_data<span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token string">'600519'</span><span class="token punctuation">,</span>start<span class="token operator">=</span><span class="token string">'2000-01-01'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'./maotai.csv'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./maotai.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 删除df指定列</span>df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span><span class="token string">'Unnamed: 0'</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 查看每一列的数据类型</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 将time列转为时间数据类型</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 将date列作为源数据的行索引</span>df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 输出该股票所有收盘比开盘上涨百分之三以上的日期</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token operator">-</span>df<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span>df<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">0.06</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token comment">#%% 输出该股票所有开盘比前日收益跌幅超过2%的日期</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token operator">-</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token comment"># 取出True对应的行数据</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token operator">-</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token comment">#%% 取出每个月的第一个交易日的第一行数据</span>new_df <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'2010-01'</span><span class="token punctuation">:</span><span class="token string">'2020-02'</span><span class="token punctuation">]</span>df_monthly <span class="token operator">=</span> new_df<span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 买入股票花费的金额</span>cost <span class="token operator">=</span> df_monthly<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span>cost<span class="token comment">#%% 卖出股票到手的钱</span><span class="token comment"># 特殊情况 : 2020年买入的股票卖不出去 得切除最后一年的数据</span>df_yearly <span class="token operator">=</span> new_df<span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>last<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>resv <span class="token operator">=</span> df_yearly<span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1200</span>resv<span class="token comment">#%% 使用昨天的收盘价作为剩余股票的单价</span>last_month <span class="token operator">=</span> <span class="token number">200</span><span class="token operator">*</span>new_df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>last_month<span class="token comment">#%% 计算总收益</span>resv<span class="token operator">+</span>last_month<span class="token operator">-</span>cost<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 双均线策略制定</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> tushare <span class="token keyword">as</span> ts<span class="token comment">#%%</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./maotai.csv'</span><span class="token punctuation">)</span>df<span class="token comment">#%% 删除df指定列</span>df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span><span class="token string">'Unnamed: 0'</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#%% 5日均线和30日均线</span>ma5 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>ma30 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>ma30<span class="token comment">#%%</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token operator">%</span>matplotlib inlineplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ma5<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ma30<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#%% 分析输出所有的金叉日期和死叉日期</span>ma5 <span class="token operator">=</span> ma5<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">:</span><span class="token punctuation">]</span>ma30 <span class="token operator">=</span> ma30<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">:</span><span class="token punctuation">]</span>df <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment">#%%</span>s1 <span class="token operator">=</span> ma5<span class="token operator">&lt;</span>ma30s2 <span class="token operator">=</span> ma5<span class="token operator">></span>ma30df<span class="token comment"># df=df.reset_index()</span><span class="token comment">#%%</span>death_ex <span class="token operator">=</span> s1 <span class="token operator">&amp;</span> s2<span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 判定死叉条件</span>death_date <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>death_ex<span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token comment"># 死叉对应行数据时间</span><span class="token comment">#%%</span>golden_ex <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span>s1 <span class="token operator">|</span> s2<span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 判定金叉条件</span>golden_date <span class="token operator">=</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>golden_ex<span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token comment"># 金叉时间</span>golden_date<span class="token comment">#%%</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>index<span class="token operator">=</span>golden_date<span class="token punctuation">)</span> <span class="token comment"># 1作为金叉的标识</span>s2 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>index<span class="token operator">=</span>death_date<span class="token punctuation">)</span> <span class="token comment"># 0作为金叉的标识</span>s  <span class="token operator">=</span>s1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s2<span class="token punctuation">)</span>s <span class="token operator">=</span> s<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 金叉和死叉对应的时间</span>s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token string">'2010'</span><span class="token punctuation">:</span><span class="token string">'2020'</span><span class="token punctuation">]</span>s<span class="token comment">#%%</span>first_money <span class="token operator">=</span> <span class="token number">100000</span> <span class="token comment"># 本金不变</span>money <span class="token operator">=</span> first_money <span class="token comment"># 买卖操作可变的</span>hold <span class="token operator">=</span>  <span class="token number">0</span> <span class="token comment"># 持有股票的数量(100股=1手)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment"># 金叉时间</span>        time <span class="token operator">=</span> s<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        p <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>time<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span> <span class="token comment"># 股票单价</span>        hand_count <span class="token operator">=</span> money <span class="token operator">//</span> <span class="token punctuation">(</span>p<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># 最多买多少手股票</span>        hold <span class="token operator">=</span> hand_count <span class="token operator">*</span> <span class="token number">100</span>        money <span class="token operator">-=</span><span class="token punctuation">(</span>hold<span class="token operator">*</span>p<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        death_time <span class="token operator">=</span> s<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment"># 死叉时间</span>        p_death <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>death_time<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span> <span class="token comment"># 卖股票的单价</span>        money<span class="token operator">+=</span> <span class="token punctuation">(</span>p_death<span class="token operator">*</span>hold<span class="token punctuation">)</span> <span class="token comment"># 卖出股票的收入</span>        hold <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 判定最后一天是金叉还是死叉</span>last_monry <span class="token operator">=</span> hold<span class="token operator">*</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 剩余股票的价值</span><span class="token comment"># 总收益</span>money<span class="token operator">+</span>last_monry<span class="token operator">-</span>first_money<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基于pandas的数据清洗"><a href="#基于pandas的数据清洗" class="headerlink" title="基于pandas的数据清洗"></a>基于pandas的数据清洗</h3><ul><li>原始数据中存在缺失值(空值)</li><li>重复值</li><li>异常值</li></ul><h4 id="处理丢失数据-空值"><a href="#处理丢失数据-空值" class="headerlink" title="处理丢失数据(空值)"></a>处理丢失数据(空值)</h4><ul><li>在数据分析中需要使用<strong>浮点型的空</strong>而不是对象类型的空 <ul><li><code>NAN</code>可以参与运算</li><li><code>None</code>不可以参与运算</li></ul></li><li>在pandas中遇到None形式的空值则pandas会将其强转成NAN的形式</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 基于pandas的数据清洗</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token builtin">type</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token builtin">type</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token punctuation">,</span>Seriesdf <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nandf<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>df<span class="token comment">#%% 方式一:对空值进行过滤(删除空所在的行数据)</span><span class="token comment"># isnull notnull any(检测行或列中是否有True) all</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 将上部的布尔值作为原数据的行索引</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># true对应的行数据就是存在缺失值的行数据</span>drop_index <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index <span class="token comment"># 即将要删除的行索引</span>df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span>drop_index<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 将缺失行进行删除</span><span class="token comment">#%% all 用来检测false 有false就false</span>df<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment">#%% 方式二--dropna:直接将缺失的行或列进行删除</span>df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#%% 对缺失值进行覆盖</span><span class="token comment"># 使用水平和竖直方向的向前向后填充去填充空值</span>df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="处理重复数据和异常数据"><a href="#处理重复数据和异常数据" class="headerlink" title="处理重复数据和异常数据"></a>处理重复数据和异常数据</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 处理重复数据</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>df<span class="token comment">#%%</span>df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>keep<span class="token operator">=</span><span class="token string">'first'</span><span class="token punctuation">)</span> <span class="token comment"># keep = False last</span><span class="token comment">#%% 处理异常数据</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment"># 判定异常条件</span>twice_std <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span>df<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token operator">></span>twice_stddf<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token operator">></span>twice_std<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="DataFrame的级联和合并操作"><a href="#DataFrame的级联和合并操作" class="headerlink" title="DataFrame的级联和合并操作"></a>DataFrame的级联和合并操作</h3><ul><li>级联(数据拼接)</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% DataFram的级联和合并操作</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token comment">#%%</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df2 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df1df2<span class="token comment">#%%</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">(</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#%% 不匹配级联 外连接(outer):补NAN(默认模式) 保证数据的完整性 内连接:只连接匹配的项</span>pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">(</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>join<span class="token operator">=</span><span class="token string">'inner'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>df1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>df2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>合并(数据合并)</li><li>merge与concat的区别在于,merge需要依据某一共同列来合并</li><li>使用pd.merge()合并时,会自动根据两者相同column名称的那一列,作为key来进行合并</li><li>注意每一列元素的顺序不要求一致</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 合并</span>df1  <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'employee'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'Bob'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token string">'lisa'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token string">'group'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'Accounting'</span><span class="token punctuation">,</span><span class="token string">'Engineering'</span><span class="token punctuation">,</span><span class="token string">'Engineering'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>df1<span class="token comment">#%%</span>df2  <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'employee'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'lisa'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token string">'Bob'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token string">'hire_date'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">2018</span><span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">2021</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>df2<span class="token comment">#%%</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df2<span class="token punctuation">,</span>df1<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">'employee'</span> <span class="token punctuation">)</span> <span class="token comment"># ctrl+p 看参数按情况传递</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pandas高级操作"><a href="#pandas高级操作" class="headerlink" title="pandas高级操作"></a>pandas高级操作</h3><h4 id="替换操作"><a href="#替换操作" class="headerlink" title="替换操作"></a>替换操作</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 替换操作</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span>df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">'Two'</span><span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">74</span><span class="token punctuation">:</span><span class="token string">'one'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">'five ten'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="映射操作"><a href="#映射操作" class="headerlink" title="映射操作"></a>映射操作</h4><ul><li>创建一个映射关系表,把<code>values</code>元素的和一个特定的标签或者字符串绑定(给一个元素提供不同的表现形式)</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df  <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>dic<span class="token punctuation">)</span>df<span class="token comment">#%%</span>dic  <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'张三'</span><span class="token punctuation">:</span><span class="token string">'ssm'</span><span class="token punctuation">,</span>    <span class="token string">'李四'</span><span class="token punctuation">:</span><span class="token string">'shaoshao'</span><span class="token punctuation">&#125;</span>df<span class="token punctuation">[</span><span class="token string">'e_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span>df<span class="token comment">#%% 运算工具(求税后薪资)</span><span class="token keyword">def</span> <span class="token function">salary_after</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> s <span class="token operator">-</span> <span class="token punctuation">(</span>s<span class="token operator">-</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0.5</span>df<span class="token punctuation">[</span><span class="token string">'after_sal'</span><span class="token punctuation">]</span> <span class="token operator">=</span>  df<span class="token punctuation">[</span><span class="token string">'salary'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>salary_after<span class="token punctuation">)</span>df<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="排序实现的随机抽样"><a href="#排序实现的随机抽样" class="headerlink" title="排序实现的随机抽样"></a>排序实现的随机抽样</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 排序实现的随机抽样</span>df  <span class="token operator">=</span>DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token comment">#%% 将原始数据打乱</span>df<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 乱序的随机序列</span>df<span class="token punctuation">.</span>take<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>take<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分组聚合"><a href="#分组聚合" class="headerlink" title="分组聚合"></a>分组聚合</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'apple'</span><span class="token punctuation">,</span><span class="token string">'banan'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>df<span class="token comment">#%% 查看详细的分组情况</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token comment">#%% 计算每一种水果的平均价格</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%% 将水果根据颜色的平均重量汇总到源数据</span>dic <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'color'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'mean_w'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="高级数据聚合-transform-apply-自定义"><a href="#高级数据聚合-transform-apply-自定义" class="headerlink" title="高级数据聚合(transform apply) 自定义"></a>高级数据聚合(transform apply) 自定义</h4><ul><li>transform apply 也可传入一个<code>lambda</code>表达式</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%% 高级数据聚合(transform apply) 自定义</span><span class="token keyword">def</span> <span class="token function">my_mean</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    m_sum <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        m_sum <span class="token operator">+=</span> i    <span class="token keyword">return</span> m_sum <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>my_mean<span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>my_mean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="透视表"><a href="#透视表" class="headerlink" title="透视表"></a>透视表</h3><ul><li>透视表是一种对数据动态排布并且分类汇总的表格格式</li><li><code>pivot_table</code> 四个重要参数<code>index,values,columns,aggfunc</code><ul><li><code>index</code>:分类汇总的分类条件</li><li><code>values</code>:对计算的数据进行筛选</li><li><code>aggfunc</code>:设置对数据聚合时进行的函数操作,默认<code>aggfunc = &#39;mean&#39;</code></li><li><code>columns</code>:设置列层次字段</li><li><code>fill_value</code>: None-&gt;0</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">df<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'对手'</span><span class="token punctuation">,</span><span class="token string">'主客场'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'得分'</span><span class="token punctuation">,</span><span class="token string">'计分板'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>aggfunc<span class="token operator">=</span><span class="token string">'sum'</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token string">'对手'</span><span class="token punctuation">,</span>fill_value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="交叉表"><a href="#交叉表" class="headerlink" title="交叉表"></a>交叉表</h3><ul><li>计算分组的特殊透视图,对数据进行汇总</li><li>`pd.corsstab(index,columns)<ul><li><code>index</code>:分组数据,交叉表的行索引</li><li><code>columns</code>:交叉表的列索引</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">pd<span class="token punctuation">.</span>crosstab<span class="token punctuation">(</span>df<span class="token punctuation">.</span>smoke<span class="token punctuation">,</span>df<span class="token punctuation">.</span>sex<span class="token punctuation">)</span> <span class="token comment"># age sex 表中的索引</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2012美国大选献金数据分析"><a href="#2012美国大选献金数据分析" class="headerlink" title="2012美国大选献金数据分析"></a>2012美国大选献金数据分析</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 导入包</span><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment">#%%</span><span class="token comment"># 读取数据</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./data/2012_Federal_Election_Commission_Database.csv'</span><span class="token punctuation">)</span>df<span class="token comment">#%%</span><span class="token comment"># 对新数据进行纵览,查看是否存在缺失数据</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 用统计学指标快速描述属性的摘要</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 空值处理 -> 将其填充为NOT PROVIDE</span>df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">'NOT PROVIDE'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 异常值处理 将捐赠金额&lt;=0的数据删除</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">]</span>drop_index <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>indexdf<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span>drop_index<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#df.info()</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">#%%</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">#%%</span><span class="token comment"># 异常值处理 将捐赠金额&lt;=0的数据删除</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token punctuation">]</span>drop_index <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">.</span>indexdf<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span>drop_index<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 用统计学指标快速描述属性的摘要</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 空值处理 -> 将其填充为NOT PROVIDE</span>df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">'NOT PROVIDE'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 异常值处理 将捐赠金额&lt;=0的数据删除</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token punctuation">]</span>drop_index <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">.</span>indexdf<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>labels<span class="token operator">=</span>drop_index<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token punctuation">]</span><span class="token comment">#%%</span><span class="token comment">#通过搜索引擎等途径，获取到每个总统候选人的所属党派，建立字典parties，候选人名字作为键，所属党派作为对应的值</span>parties <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'Bachmann, Michelle'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Cain, Herman'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Gingrich, Newt'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Huntsman, Jon'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Johnson, Gary Earl'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'McCotter, Thaddeus G'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Obama, Barack'</span><span class="token punctuation">:</span> <span class="token string">'Democrat'</span><span class="token punctuation">,</span>           <span class="token string">'Paul, Ron'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Pawlenty, Timothy'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Perry, Rick'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">"Roemer, Charles E. 'Buddy' III"</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Romney, Mitt'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">,</span>           <span class="token string">'Santorum, Rick'</span><span class="token punctuation">:</span> <span class="token string">'Republican'</span><span class="token punctuation">&#125;</span><span class="token comment"># 新建一列为各个候选人所在党派的party</span>df<span class="token punctuation">[</span><span class="token string">'party'</span><span class="token punctuation">]</span>  <span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'cand_nm'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>parties<span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 查看party这一列有哪些不同的元素</span>df<span class="token punctuation">[</span><span class="token string">'party'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">[</span><span class="token string">'party'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 查看各党派收到的政治现金总数contb_receipt_amt</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'party'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 查看每天各个党派收到的政治献金总数contb_receipt_amt</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'contb_receipt_dt'</span><span class="token punctuation">,</span><span class="token string">'party'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span>months <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'JAN'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'FEB'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'MAR'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'APR'</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'MAY'</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'JUN'</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'JUL'</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'AUG'</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'SEP'</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'OCT'</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'NOV'</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">'DEC'</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token comment">#%%</span><span class="token comment"># 将表中的日期改为'yyyy-mm-dd'</span><span class="token keyword">def</span> <span class="token function">transformDate</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">:</span>    day<span class="token punctuation">,</span>month<span class="token punctuation">,</span>year <span class="token operator">=</span> d<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>    month <span class="token operator">=</span> months<span class="token punctuation">[</span>month<span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token string">'20'</span><span class="token operator">+</span>year<span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>daydf<span class="token punctuation">[</span><span class="token string">'contb_receipt_dt'</span><span class="token punctuation">]</span>  <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'contb_receipt_dt'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>transformDate<span class="token punctuation">)</span><span class="token comment">#%%</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#%%</span><span class="token comment"># 查看老兵(捐献者的职业) DISABLED VETERAN 主要支持谁 捐钱最多</span>df<span class="token punctuation">[</span><span class="token string">'contbr_occupation'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'DISABLED VETERAN'</span>df_old <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'contbr_occupation'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'DISABLED VETERAN'</span><span class="token punctuation">]</span><span class="token comment"># 根据候选人组分,对捐赠金额求和</span>df_old<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'cand_nm'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'contb_receipt_amt'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib绘图"><a href="#matplotlib绘图" class="headerlink" title="matplotlib绘图"></a>matplotlib绘图</h3><h4 id="线形图"><a href="#线形图" class="headerlink" title="线形图"></a>线形图</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%  matplotlib 绘图</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#%% 绘制线形图</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">3</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#%%</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>x<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#%% 设置绘制坐标的比例</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment">#%% 设置图例</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'x,y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'x+1,y-2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># param : ncol=2</span><span class="token comment">#%% 设置轴的标识</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'temp'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'dist'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'dist and temp'</span><span class="token punctuation">)</span><span class="token comment">#%% 图例保存</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'x,y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">'123.png'</span><span class="token punctuation">)</span><span class="token comment">#%% 其他样式风格</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 柱状图</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>barh<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 直方图</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>data<span class="token punctuation">,</span>bins<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 饼图 labeldistance 距圆心的距离  autopct 所占的比例</span>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>arr<span class="token punctuation">,</span>labels<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>labeldistance<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>explode<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">'%0.6f%%'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#%%</span><span class="token comment"># 散点图</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;numpy&quot;&gt;&lt;a href=&quot;#numpy&quot; class=&quot;headerlink&quot; title=&quot;numpy&quot;&gt;&lt;/a&gt;numpy&lt;/h3&gt;&lt;h4 id=&quot;常用方法&quot;&gt;&lt;a href=&quot;#常用方法&quot; class=&quot;headerlink&quot; title=&quot;常用方法&quot;</summary>
      
    
    
    
    <category term="数据分析" scheme="https://shaoshaossm.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>jupyter基本操作</title>
    <link href="https://shaoshaossm.github.io/2021-11-26-jupyter-ji-ben-cao-zuo.html"/>
    <id>https://shaoshaossm.github.io/2021-11-26-jupyter-ji-ben-cao-zuo.html</id>
    <published>2021-11-26T06:24:45.000Z</published>
    <updated>2021-11-26T12:23:24.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><ul><li>启动: 在终端中录入<code>jupyter notebook</code>,回车即可</li><li>快捷键:<ul><li>添加<code>cell</code>:<code>a</code>或者<code>b</code></li><li>删除:<code>x</code></li><li>修改<code>cell</code>模式:<ul><li>m:<code>Markdown</code>模式</li><li>y :<code>code</code>模式</li></ul></li><li>执行<code>cell</code>: <code>shift+enter</code></li><li><code>tab</code>: 自动补全</li><li>打开帮助文档:<code>shift+tab</code></li></ul></li><li>在idea中使用 jupyter<ul><li><code>pip install jupyter notebook</code></li><li>ctrl + enter : 运行cell</li><li>shift + enter : 新建cell</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;启动: 在终端中录入&lt;code&gt;jupyter notebook&lt;/code&gt;,回车即可&lt;/li&gt;
&lt;li&gt;快捷</summary>
      
    
    
    
    <category term="系统配置" scheme="https://shaoshaossm.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
    <category term="pycharm" scheme="https://shaoshaossm.github.io/tags/pycharm/"/>
    
    <category term="jupyter" scheme="https://shaoshaossm.github.io/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Github搜索语法</title>
    <link href="https://shaoshaossm.github.io/2021-11-25-github-sou-suo-yu-fa.html"/>
    <id>https://shaoshaossm.github.io/2021-11-25-github-sou-suo-yu-fa.html</id>
    <published>2021-11-25T06:02:03.000Z</published>
    <updated>2021-11-25T06:47:10.042Z</updated>
    
    <content type="html"><![CDATA[<p> 可以使⽤<a href="https://github.com/">搜索</a>页面或<a href="https://github.com/search">高级搜索</a>页面来搜索GitHub </p><table><thead><tr><th>Query</th><th>Examples</th></tr></thead><tbody><tr><td>&gt;n</td><td>cats stars:&gt;100 匹配关键字“cats”且stars大于100的仓库</td></tr><tr><td>&lt;n</td><td>cats stars:&gt;100 匹配关键字“cats”且stars小于100的仓库</td></tr><tr><td>&gt;=n</td><td>cats stars:&gt;=100 匹配关键字“cats”且stars大于等于100的仓库</td></tr><tr><td>&lt;=n</td><td>cats stars:&lt;=100 匹配关键字“cats”且stars小于等于100的仓库</td></tr><tr><td>n..*</td><td>cats stars:100..* 匹配关键字“cats”且stars大于等于100的仓库</td></tr><tr><td>*..n</td><td>cats stars:*..100 匹配关键字“cats”且stars小于等于100的仓库</td></tr><tr><td>n..n</td><td>cats stars:10..50 匹配关键字“cats”且stars大于10小于50的仓库</td></tr></tbody></table><h3 id="搜索代码"><a href="#搜索代码" class="headerlink" title="搜索代码"></a>搜索代码</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li> 只能搜索⼩于384 KB的⽂件。</li><li> 只能搜索少于500,000个⽂件的存储库。</li><li> 登录的⽤户可以搜索所有公共存储库 。</li><li>除<code>filename</code>搜索外，搜索源代码时，必须包含一个搜索词。例如：搜索<code>language:java</code>无效，而是这样：<code>amazing language:java</code></li><li> 搜索结果最多可以显示来⾃同⼀⽂件的两个⽚段，但⽂件中可能会有更多结果。  </li><li> 不能将以下通配符用作搜索查询的一部分<code>. , : ; / \  &#39; &quot; = * ! ? # $ &amp; + ^ | ~ &lt; &gt; ( ) &#123; &#125; [ ]</code>,搜索将忽略这些符号。</li></ul><h4 id="日期条件"><a href="#日期条件" class="headerlink" title="日期条件"></a>日期条件</h4><p><code>cats pushed:&lt;2012-07-05</code> 搜索在2012年07⽉05⽇前push代码，且cats作为关键字</p><p><code>cats pushed:2016-04-30..2016-07-04</code>⽇期区间</p><p><code>cats created:&gt;=2017-04-01</code>创建时间</p><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><p>AND、OR、NOT</p><h4 id="排除运算"><a href="#排除运算" class="headerlink" title="排除运算"></a>排除运算</h4><p><code>cats pushed:&lt;2012-07-05 -language:java </code>搜索在2012年07⽉05⽇前push代码，且cats作为关键字，排除 <code>java </code>语⾔仓库。</p><h4 id="包含搜索"><a href="#包含搜索" class="headerlink" title="包含搜索"></a>包含搜索</h4><p><code>cats in:file</code> 搜索⽂件中包含cats的代码</p><p><code>cats in:path</code> 搜索路径中包含cats的代码</p><p><code>cats in:path,file </code>搜索路径、⽂件中包含cats的代码</p><p><code>console path:app/public language:javascript</code> 搜索关键字<code>console</code>，且语⾔为javascript，在app/public下的代码</p><h4 id="主体搜索"><a href="#主体搜索" class="headerlink" title="主体搜索"></a>主体搜索</h4><p><code>user:USERNAME</code> ⽤户名搜索</p><p><code>org: ORGNAME</code> 组织搜索</p><p><code>repo:USERNAME/REPOSITORY</code> 指定仓库搜索</p><h4 id="文件大小"><a href="#文件大小" class="headerlink" title="文件大小"></a>文件大小</h4><p><code>size&gt;10000</code>搜索大小大于1kb的文件</p><h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p><code>filename:config.php language:php</code> 搜索文件名为config.php,且语言为php的代码</p><h4 id="扩展名"><a href="#扩展名" class="headerlink" title="扩展名"></a>扩展名</h4><p><code>extension:EXTENSION </code><strong>指定扩展名</strong></p><h3 id="常见用法示例"><a href="#常见用法示例" class="headerlink" title="常见用法示例"></a>常见用法示例</h3><p><code> in:name mini-app</code> #仓库标题搜索含有关键字”mini-app”</p><p><code> in:descripton web</code> #仓库描述搜索含有关键字”web” </p><p><code>in:readme node #README</code>文件搜素含有关键字”node” </p><p>`org:github`` #匹配github名下的仓库</p><p><code> stars:&gt;3000</code> #stars数量大于3000的搜索仓库</p><p><code> stars:1000..3000</code> #stars数量大于1000小于3000的仓库</p><p><code> forks:&gt;1000</code> #forks数量大于1000的搜索关键字</p><p><code>forks:1000..3000</code>#forks数量大于1000小于3000的搜索仓库</p><p><code> size:&gt;=5000</code> #指定仓库大于5000k(5M)的搜索仓库</p><p><code> pushed:&gt;2019-02-12</code> #发布时间大于2019-02-12的仓库</p><p><code> created:&gt;2019-02-12</code> #创建时间大于2019-02-12的仓库</p><p><code> mirror:true(false)</code> #是否是镜像仓库 archived:true(false) #是否是废弃的仓库</p><p><code> user:jack</code> #用户名为”jack”的仓库</p><p><code> license:apache-2.0</code> #仓库的 LICENSE为”apache-2.0”</p><p><code> language:java</code> #使用”java”语言的仓库</p><p><code> user:jack in:name web</code> #组合搜索,用户名为”jack”,且标题含有”web”的</p><p><code> topic:jekyll</code> #匹配topic中含有关键字”jekyll”的仓库</p><p><code> topic:5</code> #匹配拥有5个topic的仓库</p><p><code> topic:&gt;3</code> #匹配拥有3个以上topic的仓库</p><p><code> is:public</code> #公开的仓库</p><p><code> is:private</code> #匹配有权限的私有仓库 </p><hr><p>案例演示：</p><p><code>in:name spring cloud stars:&gt;3000 pushed:&gt;2021-10-01</code></p><p><code>in:description 植物大战僵尸 stars:&gt;100 language：java</code></p><p><code>in:readme 植物大战僵尸 stars:&gt;100 created:&gt;2019</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 可以使⽤&lt;a href=&quot;https://github.com/&quot;&gt;搜索&lt;/a&gt;页面或&lt;a href=&quot;https://github.com/search&quot;&gt;高级搜索&lt;/a&gt;页面来搜索GitHub &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Query&lt;/</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="git" scheme="https://shaoshaossm.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Python一些类库的基本操作</title>
    <link href="https://shaoshaossm.github.io/2021-11-24-python-yi-xie-lei-ku-de-ji-ben-cao-zuo.html"/>
    <id>https://shaoshaossm.github.io/2021-11-24-python-yi-xie-lei-ku-de-ji-ben-cao-zuo.html</id>
    <published>2021-11-24T14:36:46.000Z</published>
    <updated>2021-11-25T06:03:07.916Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Xwlt"><a href="#Xwlt" class="headerlink" title="Xwlt"></a>Xwlt</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> xlwtworkbook <span class="token operator">=</span> xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>worksheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">'sheet1'</span><span class="token punctuation">)</span>worksheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'hello'</span><span class="token punctuation">)</span>workbook<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'student.xls'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Sqlite"><a href="#Sqlite" class="headerlink" title="Sqlite"></a>Sqlite</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sqlite3conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'test.db'</span><span class="token punctuation">)</span>c <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>sql <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    insert into company (id,name,age,address,salary)    values (1,'张三',22,'山西',8000)'''</span>sql <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    select * from company'''</span>cursor <span class="token operator">=</span> c<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token keyword">for</span> row <span class="token keyword">in</span> cursor<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'id='</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'name='</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'age='</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'address='</span><span class="token punctuation">,</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># conn.commit()</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Flask"><a href="#Flask" class="headerlink" title="Flask"></a>Flask</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>render_template<span class="token keyword">import</span> timeapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello world!'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/1/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 字典,列表等其他类型也可</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span>var <span class="token operator">=</span> a<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/welcome/&lt;name>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">welcome</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello %s'</span> <span class="token operator">%</span> name<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/welcome/&lt;int:id>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">welcome2</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello id: %d'</span> <span class="token operator">%</span> <span class="token builtin">id</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WordCloud"><a href="#WordCloud" class="headerlink" title="WordCloud"></a>WordCloud</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> jieba  <span class="token comment"># 分词</span><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt  <span class="token comment"># 绘图可视化</span><span class="token keyword">from</span> wordcloud <span class="token keyword">import</span> WordCloud  <span class="token comment"># 词云</span><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image  <span class="token comment"># 图片处理</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token comment"># 矩阵运算</span><span class="token keyword">import</span> sqlite3  <span class="token comment"># 数据库</span>conn <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'test.db'</span><span class="token punctuation">)</span>cur <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>sql <span class="token operator">=</span> <span class="token string">'select name,address from company'</span>data <span class="token operator">=</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> item <span class="token keyword">in</span> data<span class="token punctuation">:</span>    text <span class="token operator">=</span> text <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>cut <span class="token operator">=</span> jieba<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>text<span class="token punctuation">)</span>string <span class="token operator">=</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>cut<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'639cad061d950a7b7700d56c07d162d9f3d3c9f2.jpg'</span><span class="token punctuation">)</span>img_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img<span class="token punctuation">)</span>  <span class="token comment"># 图片->数组</span>wc <span class="token operator">=</span> WordCloud<span class="token punctuation">(</span>background_color<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">,</span>               mask<span class="token operator">=</span>img_array<span class="token punctuation">,</span>               font_path<span class="token operator">=</span><span class="token string">'CENTURY.TTF'</span><span class="token punctuation">)</span>wc<span class="token punctuation">.</span>generate_from_text<span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token comment"># 绘制图片</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>wc<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'off'</span><span class="token punctuation">)</span> <span class="token comment">#是否显示坐标轴</span><span class="token comment"># plt.show()</span>plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">'word.jpg'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Xwlt&quot;&gt;&lt;a href=&quot;#Xwlt&quot; class=&quot;headerlink&quot; title=&quot;Xwlt&quot;&gt;&lt;/a&gt;Xwlt&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫之分布式爬虫</title>
    <link href="https://shaoshaossm.github.io/2021-11-24-python-pa-chong-zhi-fen-bu-shi-pa-chong.html"/>
    <id>https://shaoshaossm.github.io/2021-11-24-python-pa-chong-zhi-fen-bu-shi-pa-chong.html</id>
    <published>2021-11-24T02:45:17.000Z</published>
    <updated>2021-11-24T08:43:44.227Z</updated>
    
    <content type="html"><![CDATA[<ul><li>搭建分布式机群,让其对一组资源进行分布式联合爬取</li><li>提升爬取效率</li><li>实现分布式:<ul><li>pip install scrapy-redis</li></ul></li><li>scrapy-redis 组件的作用:<ul><li>给原生的scrapy框架提供可以被共享的管道和调度器</li></ul></li></ul><hr><h3 id="分布式爬虫"><a href="#分布式爬虫" class="headerlink" title="分布式爬虫"></a>分布式爬虫</h3><p>实现步骤:</p><ul><li><p><code>scrapy startproject firstdemo</code></p></li><li><p><code>scrapy genspider -t crawl xxx [www.xxx.com</code>](<a href="http://www.xxx.com/">http://www.xxx.com/</a>)</p></li><li><p>修改当前爬虫文件</p><ul><li>导包 : <code>from scrapy_redis.spiders import RedisCrawlSpider</code></li><li>将<code>start_urls</code>和<code>allowed_domains</code>进行注释 </li><li>添加新属性: <code>redis_key = &#39;sun&#39; </code>可以被共享的调度器的名称</li><li>编写数据解析相关操作</li><li>将当前爬虫类的父类修改成<code>RedisCrawlSpider</code></li></ul></li><li><p>修改配置文件<code>settings</code></p></li><li><p>指定使用可以被共享的管道</p><ul><li><code>ITEM_PIPELINES = &#123;    &#39;scrapy_redis.pipelines.RedisPipeline&#39;: 400&#125;</code></li></ul></li><li><p>指定调度器</p><ul><li>增加一个去重容器类的配置,使用<code>redis</code>的<code>set</code>集合来存储请求的指纹数据,从而实现请求去重的持久化 <code>DUPEFILTER_CLASS = &#39;scrapy_redis.dupefilter.RFPDupeFilter&#39;</code></li><li>使用<code>scrapy_redis</code>组件 自己的调度器<code> SCHEDULER = &#39;scrapy_redis.scheduler.Scheduler&#39;</code></li><li>配置调度器是否要持久化,也就是当爬虫结束,是否要清空<code>Redis</code>中请求队列和去重指纹<code>set</code>(人话:爬虫一般机器宕机了,重启后是否继续爬虫还是从0开始) <code>SCHEDULER_PERSIST = True</code></li></ul></li><li><p>指定<code>redis</code>服务器</p><ul><li><code>REDIS_HOST = &#39;127.0.0.1&#39;</code></li><li><code>REDIS_PORT = 6379</code></li></ul></li><li><p><code>redis</code>相关操作配置</p><ul><li><p>linux或mac:</p><ul><li><code>redis.conf</code></li></ul></li><li><p>windows:<code>redis.windows.conf</code></p><ul><li>将<code>bind 127.0.0.1</code> 删除</li><li>关闭保护模式 <code>protected-mode yes</code> 改为 <code>no</code></li></ul></li><li><p>结合配置文件开启redis服务</p><ul><li><code>redis-server redis.windows.conf</code></li></ul></li><li><p>启动客户端</p><ul><li><code>redis-cli</code></li></ul></li></ul></li><li><p>执行工程</p><ul><li><code>scrapy runspider xxx.py</code></li><li>向调度器队列(redis)中放入一个起始url<ul><li><code>lpush xxx www.xx.com</code></li></ul></li><li>查看队列中所有的内容和数量:<ul><li><code>lrange xx:items 0 -1</code></li><li><code>llen xx:items</code></li></ul></li></ul></li><li><p>最终爬取到的数据存储在了<code>redis</code>的<code>proName:items</code>这个数据结构中</p></li></ul><hr><p>代码实现</p><p><code>sun2.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>linkextractors <span class="token keyword">import</span> LinkExtractor<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> CrawlSpider<span class="token punctuation">,</span> Rule<span class="token keyword">from</span> scrapy_redis<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> RedisCrawlSpider<span class="token keyword">from</span> sun2Pro<span class="token punctuation">.</span>items <span class="token keyword">import</span> Sun2ProItem<span class="token keyword">class</span> <span class="token class-name">Sun2Spider</span><span class="token punctuation">(</span>RedisCrawlSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'sun2'</span>    redis_key <span class="token operator">=</span> <span class="token string">'sun'</span>    rules <span class="token operator">=</span> <span class="token punctuation">(</span>        Rule<span class="token punctuation">(</span>LinkExtractor<span class="token punctuation">(</span>allow<span class="token operator">=</span><span class="token string">r'id=2&amp;page=\d+'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token operator">=</span><span class="token string">'parse_item'</span><span class="token punctuation">,</span> follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div[3]/ul[2]/li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            new_num <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            new_title <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./span[3]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            item <span class="token operator">=</span> Sun2ProItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_title            item<span class="token punctuation">[</span><span class="token string">'new_num'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_num            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">Sun2ProItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    new_num <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">DOWNLOAD_DELAY <span class="token operator">=</span> <span class="token number">3</span><span class="token comment"># 指定管道</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'scrapy_redis.pipelines.RedisPipeline'</span><span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">&#125;</span><span class="token comment"># 指定调度器</span><span class="token comment"># 增加一个去重容器类的配置,使用redis的set集合来存储请求的指纹数据,从而实现请求去重的持久化</span>DUPEFILTER_CLASS <span class="token operator">=</span> <span class="token string">'scrapy_redis.dupefilter.RFPDupeFilter'</span><span class="token comment"># 使用scrapy_redis组件 自己的调度器</span>SCHEDULER <span class="token operator">=</span> <span class="token string">'scrapy_redis.scheduler.Scheduler'</span><span class="token comment"># 配置调度器是否要持久化,也就是当爬虫结束,是否要清空Redis中请求队列和去重指纹set(人话:爬虫一般机器宕机了,重启后是否继续爬虫还是从0开始)</span>SCHEDULER_PERSIST <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># 指定redis</span>REDIS_HOST <span class="token operator">=</span> <span class="token string">'127.0.0.1'</span>REDIS_PORT <span class="token operator">=</span> <span class="token number">6379</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="增量式爬虫"><a href="#增量式爬虫" class="headerlink" title="增量式爬虫"></a>增量式爬虫</h3><ul><li>监测网站数据更新情况,只会爬取网站最新出来的数据</li><li><strong>核心</strong>:监测页面url之前是否请求过<ul><li>将爬取过的url存储到<code>redis</code>的<code>set</code>数据结构中</li></ul></li><li>查看所有的 <code>urls</code> : <code>semebers urls</code></li></ul><hr><p>案例演示</p><p><code>movie.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>linkextractors <span class="token keyword">import</span> LinkExtractor<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> CrawlSpider<span class="token punctuation">,</span> Rule<span class="token keyword">from</span> redis <span class="token keyword">import</span> Redis<span class="token keyword">from</span> moviePro<span class="token punctuation">.</span>items <span class="token keyword">import</span> MovieproItem<span class="token keyword">class</span> <span class="token class-name">MovieSpider</span><span class="token punctuation">(</span>CrawlSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'movie'</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://www.male37.live/index.php/vod/type/id/2/page/2.html'</span><span class="token punctuation">]</span>    rules <span class="token operator">=</span> <span class="token punctuation">(</span>        <span class="token comment"># Rule(LinkExtractor(allow=r'/id/3/page/\d+/\.html'), callback='parse_item', follow=True),</span>        Rule<span class="token punctuation">(</span>LinkExtractor<span class="token punctuation">(</span>allow<span class="token operator">=</span><span class="token string">r'id/\d+/page/\d+\.html'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token operator">=</span><span class="token string">'parse_item'</span><span class="token punctuation">,</span> follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    conn <span class="token operator">=</span> Redis<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[1]/div/div[1]/div/div/div[2]/ul/li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            detail_url <span class="token operator">=</span> <span class="token string">'http://www.male37.live'</span> <span class="token operator">+</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            ex <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>sadd<span class="token punctuation">(</span><span class="token string">'urls'</span><span class="token punctuation">,</span> detail_url<span class="token punctuation">)</span>            <span class="token keyword">if</span> ex <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'该url没有被爬取过,可以进行数据爬取!'</span><span class="token punctuation">)</span>                <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>detail_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_detail<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据还没更新,暂无新数据可爬取!'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_detail</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> MovieproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span>            <span class="token string">'/html/body/div[1]/div/div[1]/div[1]/div/div/div/div[2]/h1/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'--------------'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'desc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span>            <span class="token string">'/html/body/div[1]/div/div[1]/div[1]/div/div/div/div[2]/p[5]/span[2]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'desc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'desc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">MovieproItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    desc <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pipelines.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MovieproPipeline</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> spider<span class="token punctuation">.</span>conn    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'name'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'desc'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token string">'desc'</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>lpush<span class="token punctuation">(</span><span class="token string">'movieData'</span><span class="token punctuation">,</span> dic<span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">REDIS_HOST <span class="token operator">=</span> <span class="token string">'127.0.0.1'</span>REDIS_PORT <span class="token operator">=</span> <span class="token number">6379</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'moviePro.pipelines.MovieproPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;搭建分布式机群,让其对一组资源进行分布式联合爬取&lt;/li&gt;
&lt;li&gt;提升爬取效率&lt;/li&gt;
&lt;li&gt;实现分布式:&lt;ul&gt;
&lt;li&gt;pip install scrapy-redis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;scrapy-redis 组件的作用:&lt;</summary>
      
    
    
    
    <category term="爬虫" scheme="https://shaoshaossm.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫之scrapy框架学习</title>
    <link href="https://shaoshaossm.github.io/2021-11-20-scrapy-kuang-jia-xue-xi.html"/>
    <id>https://shaoshaossm.github.io/2021-11-20-scrapy-kuang-jia-xue-xi.html</id>
    <published>2021-11-20T05:29:56.000Z</published>
    <updated>2021-11-23T13:57:13.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="scrapy安装步骤"><a href="#scrapy安装步骤" class="headerlink" title="scrapy安装步骤"></a>scrapy安装步骤</h3><ul><li>pip install wheel</li><li>下载twisted : 地址:<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted">https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted</a> (选择对应的版本)</li><li>安装twisted : pip install aiohttp-3.8.1-cp38-cp38-win_amd64.whl</li><li>pip install pywin32</li><li>pip install scrapy</li><li>测试终端输入: scrapy</li><li>创建工程 终端输入: scrapy startproject firstdemo</li><li>在sprders目录 终端输入:scrapy genspider first <a href="http://www.xxx.com/">www.xxx.com</a></li><li>执行工程 : scrapy crawl first (spiderName)  –nolong  (不输出日志)</li><li>ROBOTSTXT_OBEY = False</li><li>配置文件<code>settings.py</code>中加上 LOG_ERROR = ‘ERROR’</li><li>USER_AGENT: ‘Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36’</li></ul><h3 id="scrapy持久化存储"><a href="#scrapy持久化存储" class="headerlink" title="scrapy持久化存储"></a>scrapy持久化存储</h3><h4 id="基于终端指令"><a href="#基于终端指令" class="headerlink" title="基于终端指令"></a>基于终端指令</h4><ul><li>持久化存储对应的终端指令只能为：(‘json’, ‘jsonlines’, ‘jl’, ‘csv’, ‘xml’, ‘marshal’, ‘pickle’)</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">FirstSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 爬虫文件名称</span>    name <span class="token operator">=</span> <span class="token string">'qiubai'</span>    <span class="token comment"># 允许的域名</span>    <span class="token comment"># allowed_domains = ['www.xxx.com']</span>    <span class="token comment"># 起始url列表:存放的url会被scrapy自动进行请求的发送</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.qiushibaike.com/text/'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        all_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        div_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="col1 old-style-col1"]/div'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> div <span class="token keyword">in</span> div_list<span class="token punctuation">:</span>            <span class="token comment"># extract: 将Selector对象中data参数存储的字符串提取出来</span>            <span class="token comment"># author = div.xpath('./div[1]/a[2]/h2/text()')[0].extract() 作用一样 必须是一个列元素</span>            author <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div[1]/a[2]/h2/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            content <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a[1]/div/span//text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>            content <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>content<span class="token punctuation">)</span>            dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token string">'author'</span><span class="token punctuation">:</span> author<span class="token punctuation">,</span>                <span class="token string">'content'</span><span class="token punctuation">:</span> content            <span class="token punctuation">&#125;</span>            all_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dic<span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">return</span> all_data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="基于管道"><a href="#基于管道" class="headerlink" title="基于管道"></a>基于管道</h4><ul><li>编码流程<ul><li>数据解析</li><li>在<code>item</code>类中定义相关的属性</li><li>将解析的数据封装到<code>item</code>类型的对象</li><li>在<code>item</code>类型的对象提交给管道进行持久化存储的操作</li><li>在管道类的<code>process_item</code>中要将其受到的<code>item</code>对象存储的数据进行持久化存储操作</li><li>在配置文件中开启管道</li></ul></li><li><font color="red">管道文件中一个管道类对应一组数据存储到一个平台或者载体中</font></li><li><font color="red">爬虫文件提交的item只会给管道文件中第一个被执行的管道类接受</font></li><li><font color="red">process_item中的return item表示将item传递给下一个即将被执行的管道类</font></li></ul><p><code>qiubai.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>    div_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="col1 old-style-col1"]/div'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> div <span class="token keyword">in</span> div_list<span class="token punctuation">:</span>        <span class="token comment"># extract: 将Selector对象中data参数存储的字符串提取出来</span>        author <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div[1]/a[2]/h2/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        content <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a[1]/div/span//text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>        content <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        item <span class="token operator">=</span> QiubaiproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'author'</span><span class="token punctuation">]</span> <span class="token operator">=</span> author        item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> content        <span class="token keyword">yield</span> item  <span class="token comment"># 将item提交给管道</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pipelines.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 存储到本地</span><span class="token keyword">class</span> <span class="token class-name">QiubaiproPipeline</span><span class="token punctuation">:</span>    fp <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token comment"># 重写父类的方法,该方法只在爬虫时调用一次</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./qiubai.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token comment"># 接受爬虫过来的item对象,处理item类型的对象,每接收一个item对象调用一次</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        author <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'author'</span><span class="token punctuation">]</span>        content <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>author <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token comment"># 重写父类的方法,该方法只在爬虫结束调用一次</span>    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'结束爬虫!'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 存储到数据库</span><span class="token comment"># 管道文件中一个管道类对应一组数据存储到一个平台或者载体中</span><span class="token keyword">class</span> <span class="token class-name">mysqlPileLine</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> <span class="token boolean">None</span>    cursor <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'hxl158120'</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'qiubai'</span><span class="token punctuation">,</span>                                    charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'insert into qiubai values("%s","%s")'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">"author"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">"content"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">QiubaiproItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># define the fields for your item here like:</span>    <span class="token comment"># name = scrapy.Field()</span>    author <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <code>settings.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># 300 优先级 数值越小 优先级越高</span>    <span class="token string">'qiubaiPro.pipelines.QiubaiproPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>    <span class="token string">'qiubaiPro.pipelines.mysqlPileLine'</span><span class="token punctuation">:</span> <span class="token number">301</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>基于Spider的全站数据爬取彼岸网图片名称和图片并进行本地存储</li></ul><p><code>meinv.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> meinvPro<span class="token punctuation">.</span>items <span class="token keyword">import</span> MeinvproItem<span class="token keyword">class</span> <span class="token class-name">MeinvSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'meinv'</span>    <span class="token comment"># allowed_domains = ['www.xxx.com']</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://pic.netbian.com/4kmeinv/index.html'</span><span class="token punctuation">]</span>    url <span class="token operator">=</span> <span class="token string">'https://pic.netbian.com/4kmeinv/index_%d.html'</span>    page_num <span class="token operator">=</span> <span class="token number">2</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="main"]/div[3]/ul/li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            img_name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/b/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 若有图片懒加载 使用伪属性</span>            img_src <span class="token operator">=</span> <span class="token string">'https://pic.netbian.com/'</span> <span class="token operator">+</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/img/@src'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span> img_src<span class="token punctuation">)</span>            item <span class="token operator">=</span> MeinvproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'img_src'</span><span class="token punctuation">]</span> <span class="token operator">=</span> img_src            <span class="token keyword">yield</span> item        <span class="token keyword">if</span> self<span class="token punctuation">.</span>page_num <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>            new_url <span class="token operator">=</span> <span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>url <span class="token operator">%</span> self<span class="token punctuation">.</span>page_num<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>page_num <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>new_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">MeinvproItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># define the fields for your item here like:</span>    img_src <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pipelines.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> itemadapter <span class="token keyword">import</span> ItemAdapter<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>pipelines<span class="token punctuation">.</span>images <span class="token keyword">import</span> ImagesPipeline<span class="token keyword">import</span> scrapy<span class="token comment"># class MeinvproPipeline:</span><span class="token comment">#     def process_item(self, item, spider):</span><span class="token comment">#         return item</span><span class="token keyword">class</span> <span class="token class-name">imgsPileLine</span><span class="token punctuation">(</span>ImagesPipeline<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 根据图片地址进行图片数据请求</span>    <span class="token keyword">def</span> <span class="token function">get_media_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'img_src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># 指定图片存储路径</span>    <span class="token keyword">def</span> <span class="token function">file_path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> info<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        img_Name <span class="token operator">=</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> img_Name    <span class="token keyword">def</span> <span class="token function">item_completed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> results<span class="token punctuation">,</span> item<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 指定图片存储目录</span>IMAGES_STORE <span class="token operator">=</span> <span class="token string">'./imgs'</span><span class="token comment"># 更换管道</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'meinvPro.pipelines.imgsPileLine'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="五大核心组件"><a href="#五大核心组件" class="headerlink" title="五大核心组件"></a>五大核心组件</h3><ul><li>引擎(Scrapy)<ul><li>用来处理整个系统的数据流处理,触发事务(框架核心)。</li></ul></li><li>调度器(Scheduler)<ul><li>用来接收引擎发过来的请求,压入队列中,并在引擎再次请求的时候返回,可以想象成一个URL(抓取网页的网址或者说是链接)的优先队列,由他来决定下一个要抓取的网址是什么,同时去除重复的网址。</li></ul></li><li>下载器(Downloader)<ul><li>用于下载网页的内容,并将网页内容返回给蜘蛛(Scrapy下载是建立在twisted这个高效的异步模型上的)。</li></ul></li><li>爬虫(Spiders)<ul><li>爬虫主要是干活的,用于从特定的网页中提取自己需要的信息,即所谓的实体(item).用户也可以从中取出链接,让Scrapy继续抓取下一个页面。</li></ul></li><li>项目管道(Pipeline)<ul><li>负责处理爬虫从网页中抽取的实体,主要的功能是持久化实体、验证实体的有效性,清楚不需要的信息,当页面被爬虫解析后,将被发送到项目管道,并经过几个特定的次序处理数据。</li></ul></li></ul><h3 id="请求传参"><a href="#请求传参" class="headerlink" title="请求传参"></a>请求传参</h3><ul><li>使用场景：爬取解析的数据不在同一张页面中（详情页）。</li></ul><p><code>meta=&#123;&#39;item&#39;:item&#125;</code></p><p>案例演示</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> bossPro<span class="token punctuation">.</span>items <span class="token keyword">import</span> BossproItem<span class="token keyword">class</span> <span class="token class-name">BossSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'boss'</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://jh.58.com/job/?param6693=8|10&amp;PGTID=0d100000-0021-349d-98e8-58c336a9edba&amp;ClickID=2'</span><span class="token punctuation">]</span>    <span class="token comment"># 回调函数接收item</span>    <span class="token keyword">def</span> <span class="token function">parse_detail</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'item'</span><span class="token punctuation">]</span>        job_desc <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[3]/div[3]/div[2]/div[1]/div[1]/div[1]//text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>        job_desc <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>job_desc<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>job_desc<span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'job_desc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> job_desc        <span class="token keyword">yield</span> item    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="list_con"]/li'</span><span class="token punctuation">)</span>        <span class="token comment"># print(li_list)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            item <span class="token operator">=</span> BossproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            job_address <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div[1]/div[1]/a/span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            job_name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div[1]/div[1]/a/span[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'job_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> jo b_name            <span class="token keyword">print</span><span class="token punctuation">(</span>job_address<span class="token punctuation">,</span>job_name<span class="token punctuation">)</span>            detail_url <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div[1]/div[1]/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 请求传参：meta = &#123;&#125;，可以将meta字典传递给请求对应的回调函数</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>detail_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_detail<span class="token punctuation">,</span>meta<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'item'</span><span class="token punctuation">:</span>item<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h3><ul><li>位于引擎和下载器之间</li><li>用于拦截到整个工程中所有请求和响应</li><li>拦截请求<ul><li>UA伪装</li><li>代理IP</li></ul></li><li>拦截相应<ul><li>篡改响应数据(响应对象)</li></ul></li></ul><p>案例演示 (ip更换失败)</p><p><code>middle.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">MiddleSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'middle'</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.baidu.com/s?wd=ip'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        page_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'ip.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>            fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>middlewares.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MiddleproDownloaderMiddleware</span><span class="token punctuation">:</span>    <span class="token comment"># UA伪装</span>    user_agent_list<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>    <span class="token punctuation">]</span>    <span class="token comment"># 代理池</span>    PROXY_http <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">'153.180.102.104:80'</span><span class="token punctuation">,</span>        <span class="token string">'195.208.131.189:56055'</span>    <span class="token punctuation">]</span>    PROXY_https <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">'120.83.49.90.9000'</span><span class="token punctuation">,</span>        <span class="token string">'95.189.112.214:35508'</span>    <span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">process_request</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'User-Agent'</span><span class="token punctuation">]</span> <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>self<span class="token punctuation">.</span>user_agent_list<span class="token punctuation">)</span><span class="token comment"># 方便测试</span>        request<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'proxy'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'http://121.232.148.116:9000'</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">def</span> <span class="token function">process_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> response    <span class="token keyword">def</span> <span class="token function">process_exception</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> exception<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 代理</span>        <span class="token keyword">if</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'http'</span><span class="token punctuation">:</span>            request<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'proxy'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'http://'</span><span class="token operator">+</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PROXY_http<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            request<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'proxy'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'https://'</span><span class="token operator">+</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>self<span class="token punctuation">.</span>PROXY_https<span class="token punctuation">)</span>        <span class="token keyword">return</span> request <span class="token comment"># 将修正后的请求对象进行重新发送</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 开启</span>DOWNLOADER_MIDDLEWARES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'middlePro.middlewares.MiddleproDownloaderMiddleware'</span><span class="token punctuation">:</span> <span class="token number">543</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>爬取网易各大板块文章标题和内容并本地存储</li></ul><p><code>wangyi.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> wangyiPro<span class="token punctuation">.</span>items <span class="token keyword">import</span> WangyiproItem<span class="token keyword">class</span> <span class="token class-name">WangyiSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'wangyi'</span>    <span class="token comment"># allowed_domains = ['www.xxx.com']</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://news.163.com/'</span><span class="token punctuation">]</span>    models_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 存储板块对应详情页对应的url</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>bro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'E:\PyCharm\pachong\com\ssm\seleniumTest\chromedriver.exe'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="index2016_wrap"]/div[1]/div[2]/div[2]/div[2]/div[2]/div/ul/li'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>li_list<span class="token punctuation">)</span>        alist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> index <span class="token keyword">in</span> alist<span class="token punctuation">:</span>            model_url <span class="token operator">=</span> li_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>models_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>model_url<span class="token punctuation">)</span>        <span class="token keyword">for</span> url <span class="token keyword">in</span> self<span class="token punctuation">.</span>models_urls<span class="token punctuation">:</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_model<span class="token punctuation">)</span>    <span class="token comment"># 解析每个板块页面中对应新闻的标题和新闻详情页的url</span>    <span class="token keyword">def</span> <span class="token function">parse_model</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        div_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div/div[3]/div[4]/div[1]/div[1]/div/ul/li/div/div'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> div <span class="token keyword">in</span> div_list<span class="token punctuation">:</span>            title <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/div[1]/h3/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span>            new_detail_url <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/div[1]/h3/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            item <span class="token operator">=</span> WangyiproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> title            <span class="token comment"># 对新闻详情页的url发起请求</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>new_detail_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse_detail<span class="token punctuation">,</span> meta<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'item'</span><span class="token punctuation">:</span> item<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parse_detail</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        all_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        content <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="content"]/div[2]//text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>        content <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        item <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'item'</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> content        dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'content'</span><span class="token punctuation">:</span> content        <span class="token punctuation">&#125;</span>        all_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dic<span class="token punctuation">)</span>        <span class="token keyword">yield</span> item        <span class="token keyword">return</span> all_data    <span class="token keyword">def</span> <span class="token function">closed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">WangyiproItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>middlewares.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>http <span class="token keyword">import</span> HtmlResponse<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">class</span> <span class="token class-name">WangyiproDownloaderMiddleware</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        bro <span class="token operator">=</span> spider<span class="token punctuation">.</span>bro  <span class="token comment"># 获取浏览器对象</span>        <span class="token comment"># url -> request -> response</span>        <span class="token keyword">if</span> request<span class="token punctuation">.</span>url <span class="token keyword">in</span> spider<span class="token punctuation">.</span>models_urls<span class="token punctuation">:</span>            bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>            sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            page_text <span class="token operator">=</span> bro<span class="token punctuation">.</span>page_source            <span class="token comment"># 五大板块对应的响应对象 针对定位到的这些response进行篡改,实例化一个新的响应对象 ,替代原来的响应对象</span>            new_response <span class="token operator">=</span> HtmlResponse<span class="token punctuation">(</span>url<span class="token operator">=</span>request<span class="token punctuation">.</span>url<span class="token punctuation">,</span> body<span class="token operator">=</span>page_text<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> request<span class="token operator">=</span>request<span class="token punctuation">)</span>            <span class="token keyword">return</span> new_response        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment"># 其他请求对应的响应对象</span>            <span class="token keyword">return</span> response<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pipelines.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">WangyiproPipeline</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span>LOG_ERROR <span class="token operator">=</span> <span class="token string">'ERROR'</span>DOWNLOADER_MIDDLEWARES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'wangyiPro.middlewares.WangyiproDownloaderMiddleware'</span><span class="token punctuation">:</span> <span class="token number">543</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'wangyiPro.pipelines.WangyiproPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CrawlSpider类"><a href="#CrawlSpider类" class="headerlink" title="CrawlSpider类"></a>CrawlSpider类</h3><ul><li>全站数据爬取的方式<ul><li>基于spider: 手动请求</li><li>基于CrawlSpider</li></ul></li><li>CrawlSpider的使用<ul><li>创建工程</li><li>cd xxx</li><li>scrapy genspider -t crawl  xxx <a href="http://www.xxx.com/">www.xxx.com</a></li></ul></li><li>链接提取器:<ul><li>根据指定规则(allow)进行指定链接提取</li></ul></li><li>规则解析器:<ul><li>将链接提取提取到的链接进行指定规则 (callback) 的解析操作</li></ul></li></ul><hr><p>案例演示</p><ul><li>爬取sun网站中的编号,新闻标题,新闻内容,标号</li></ul><p><code>sun.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>linkextractors <span class="token keyword">import</span> LinkExtractor<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> CrawlSpider<span class="token punctuation">,</span> Rule<span class="token keyword">from</span> sunPro<span class="token punctuation">.</span>items <span class="token keyword">import</span> SunproItem<span class="token punctuation">,</span>DetailItem<span class="token keyword">class</span> <span class="token class-name">SunSpider</span><span class="token punctuation">(</span>CrawlSpider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'sun'</span>    <span class="token comment"># allowed_domains = ['www.xxx.com']</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://wz.sun0769.com/political/index/politicsNewest?id=2&amp;page=2'</span><span class="token punctuation">]</span>    link <span class="token operator">=</span> LinkExtractor<span class="token punctuation">(</span>allow<span class="token operator">=</span><span class="token string">r'id=2&amp;page=\d+'</span><span class="token punctuation">)</span>    <span class="token comment"># link_detail = 'https://wz.sun0769.com/political/politics/index?' + LinkExtractor(allow=r'id=\d+')</span>    link_detail <span class="token operator">=</span> LinkExtractor<span class="token punctuation">(</span>allow<span class="token operator">=</span><span class="token string">r'id=\d+'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>link_detail<span class="token punctuation">)</span>    rules <span class="token operator">=</span> <span class="token punctuation">(</span>        <span class="token comment"># LinkExtractor 链接提取器</span>        <span class="token comment"># allows = (正则) 根据指定规则进行链接提取</span>        <span class="token comment"># follow=True : 将链接提取器继续作用到链接提取器提取到的链接所对应的页面中</span>        <span class="token comment"># 规则解析器 : 将链接提取提取到的链接进行指定规则 (callback) 的解析操作</span>        Rule<span class="token punctuation">(</span>link<span class="token punctuation">,</span> callback<span class="token operator">=</span><span class="token string">'parse_item'</span><span class="token punctuation">,</span> follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Rule<span class="token punctuation">(</span>link_detail<span class="token punctuation">,</span> callback<span class="token operator">=</span><span class="token string">'parse_detail'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token comment"># 解析新闻编号、标题</span>    <span class="token keyword">def</span> <span class="token function">parse_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        li_list <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div[3]/ul[2]/li'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>            new_num <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./span[1]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            new_title <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./span[3]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>            item <span class="token operator">=</span> SunproItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_title            item<span class="token punctuation">[</span><span class="token string">'new_num'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_num            <span class="token keyword">yield</span> item    <span class="token comment"># 解析新闻内容、编号</span>    <span class="token keyword">def</span> <span class="token function">parse_detail</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        new_id <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[3]/div[2]/div[2]/div[1]/span[4]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        new_content <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[3]/div[2]/div[2]/div[2]/pre/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>        new_content <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>new_content<span class="token punctuation">)</span>        item <span class="token operator">=</span> DetailItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'new_id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_id        item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> new_content        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>items.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">SunproItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    new_num <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">DetailItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    new_id <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pipelines.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SunproPipeline</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 判定item类型</span>        <span class="token keyword">if</span> item<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__ <span class="token operator">==</span> <span class="token string">'DetailItem'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'new_id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'new_num'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>settings.py</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span>LOG_ERROR <span class="token operator">=</span> <span class="token string">'ERROR'</span>DOWNLOAD_DELAY <span class="token operator">=</span> <span class="token number">3</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">&#123;</span>   <span class="token string">'sunPro.pipelines.SunproPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;scrapy安装步骤&quot;&gt;&lt;a href=&quot;#scrapy安装步骤&quot; class=&quot;headerlink&quot; title=&quot;scrapy安装步骤&quot;&gt;&lt;/a&gt;scrapy安装步骤&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;pip install wheel&lt;/li&gt;
&lt;li&gt;下载twi</summary>
      
    
    
    
    <category term="爬虫" scheme="https://shaoshaossm.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫之selenium学习</title>
    <link href="https://shaoshaossm.github.io/2021-11-19-python-pa-chong-zhong-zhi-selenium-xue-xi.html"/>
    <id>https://shaoshaossm.github.io/2021-11-19-python-pa-chong-zhong-zhi-selenium-xue-xi.html</id>
    <published>2021-11-19T08:41:17.000Z</published>
    <updated>2022-01-12T08:31:53.672Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本概述"><a href="#基本概述" class="headerlink" title="基本概述"></a>基本概述</h3><ul><li><code>selenium</code>可以便捷的获取网站中的动态加在的数据</li><li><code>selenium</code>可以便捷的实现模拟登陆</li><li><code>selenium</code>是基于浏览器自动化的一个模块</li></ul><h3 id="使用流程"><a href="#使用流程" class="headerlink" title="使用流程"></a>使用流程</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> selenium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看google浏览器版本号</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在浏览器中输入</span>chrome://version/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>选择合适的版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://chromedriver.storage.googleapis.com/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>将下载好的<code>chromedriver.exe</code>放入开发目录中即可</li><li>运行测试</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriverbro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="案例演示1-："><a href="#案例演示1-：" class="headerlink" title="案例演示1.："></a>案例演示1.：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> lxml <span class="token keyword">import</span> html<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepbro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://scxk.nmpa.gov.cn:81/xk/'</span><span class="token punctuation">)</span><span class="token comment"># 获取浏览器当前页面的页面源码数据</span>page_text <span class="token operator">=</span> bro<span class="token punctuation">.</span>page_sourcetree <span class="token operator">=</span> html<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul[@id="gzlist"]/li'</span><span class="token punctuation">)</span><span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>    name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./dl/@title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="案例演示2-："><a href="#案例演示2-：" class="headerlink" title="案例演示2.："></a>案例演示2.：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> Bybro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://lol.qq.com/main.shtml'</span><span class="token punctuation">)</span><span class="token comment"># 获取浏览器当前页面的页面源码数据</span>bro<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">'window.scrollTo(0,document.body.scrollHeight)'</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>search_btn<span class="token operator">=</span>bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'J_headSearchBtn'</span><span class="token punctuation">)</span><span class="token comment"># search_btn = bro.find_element_by_id('J_headSearchBtn')</span>search_btn<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>search_input <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'J_hoverSearchInput'</span><span class="token punctuation">)</span>search_input<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'无限火力'</span><span class="token punctuation">)</span>btn <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'J_hoverSearchBtn'</span><span class="token punctuation">)</span>btn<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.4399.com'</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>back<span class="token punctuation">(</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>forward<span class="token punctuation">(</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="案例演示3"><a href="#案例演示3" class="headerlink" title="案例演示3.:"></a>案例演示3.:</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver <span class="token keyword">import</span> ActionChainsbro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.runoob.com/try/try.php?filename=jqueryui-api-droppable'</span><span class="token punctuation">)</span><span class="token comment"># 如果定位的标签在iframe标签中，需如下操作</span>bro<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>frame<span class="token punctuation">(</span><span class="token string">'iframeResult'</span><span class="token punctuation">)</span>  <span class="token comment"># 切换浏览器标签的作用域</span>div <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'draggable'</span><span class="token punctuation">)</span><span class="token comment"># 动作链</span>action <span class="token operator">=</span> ActionChains<span class="token punctuation">(</span>bro<span class="token punctuation">)</span><span class="token comment"># 点击长按指定的标签</span>action<span class="token punctuation">.</span>click_and_hold<span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># (x,y) x: 水平 y： 竖直</span>    action<span class="token punctuation">.</span>move_by_offset<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>perform<span class="token punctuation">(</span><span class="token punctuation">)</span>    sleep<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token comment"># 释放动作链</span>action<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="qq空间自动登录签到"><a href="#qq空间自动登录签到" class="headerlink" title="qq空间自动登录签到"></a>qq空间自动登录签到</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver <span class="token keyword">import</span> ActionChainsbro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://qzone.qq.com/'</span><span class="token punctuation">)</span><span class="token comment"># 如果定位的标签在iframe标签中，需如下操作</span>bro<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>frame<span class="token punctuation">(</span><span class="token string">'login_frame'</span><span class="token punctuation">)</span>  <span class="token comment"># 切换浏览器标签的作用域</span>a_tag <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'switcher_plogin'</span><span class="token punctuation">)</span>a_tag<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>username_tag <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'u'</span><span class="token punctuation">)</span>password_tag <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>username_tag<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>password_tag<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>btn <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'login_button'</span><span class="token punctuation">)</span>btn<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>qiandao <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'checkin_button'</span><span class="token punctuation">)</span>qiandao<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>switch_to<span class="token punctuation">.</span>frame<span class="token punctuation">(</span><span class="token string">'checkin_likeTipsFrame'</span><span class="token punctuation">)</span>qiandao_img <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'detail-box'</span><span class="token punctuation">)</span>qiandao_img<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>fabu <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span> <span class="token string">'btn-submit'</span><span class="token punctuation">)</span>fabu<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="验证码识别并自动登录"><a href="#验证码识别并自动登录" class="headerlink" title="验证码识别并自动登录"></a>验证码识别并自动登录</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 验证码模拟登陆</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> time<span class="token keyword">import</span> chaojiying<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    bro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'./chromedriver'</span><span class="token punctuation">)</span>    bro<span class="token punctuation">.</span>maximize_window<span class="token punctuation">(</span><span class="token punctuation">)</span>    bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://changyan.kuaizhan.com/"</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># tanchuangguanbi = bro.find_element(By.CLASS_NAME, ' icon-raw-error ')</span>    tanchuangguanbi <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'icon-raw-error '</span><span class="token punctuation">)</span>    tanchuangguanbi<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    btn <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'c-button'</span><span class="token punctuation">)</span>    btn<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    bro<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'aa.png'</span><span class="token punctuation">)</span>    code_img_ele <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="vcode-img"]'</span><span class="token punctuation">)</span>    <span class="token comment"># 获取验证码</span>    <span class="token comment"># 验证码左上角坐标x，y</span>    location <span class="token operator">=</span> code_img_ele<span class="token punctuation">.</span>location    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'location: '</span><span class="token punctuation">,</span> location<span class="token punctuation">)</span>    <span class="token comment"># 验证码对应的长宽</span>    size <span class="token operator">=</span> code_img_ele<span class="token punctuation">.</span>size    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'size'</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span>    rangle <span class="token operator">=</span> <span class="token punctuation">(</span>        <span class="token builtin">int</span><span class="token punctuation">(</span>location<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1.25</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>location<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1.25</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>location<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> size<span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1.25</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>location<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> size<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1.25</span>    <span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rangle<span class="token punctuation">)</span>    i <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./aa.png'</span><span class="token punctuation">)</span>    code_img_name <span class="token operator">=</span> <span class="token string">'./code.png'</span>    frame <span class="token operator">=</span> i<span class="token punctuation">.</span>crop<span class="token punctuation">(</span>rangle<span class="token punctuation">)</span>    frame<span class="token punctuation">.</span>save<span class="token punctuation">(</span>code_img_name<span class="token punctuation">)</span>    <span class="token comment"># 解析验证码</span>    chaojiying <span class="token operator">=</span> chaojiying<span class="token punctuation">.</span>Chaojiying_Client<span class="token punctuation">(</span><span class="token string">'19858165529'</span><span class="token punctuation">,</span> <span class="token string">'hxl158120'</span><span class="token punctuation">,</span> <span class="token string">'925040'</span><span class="token punctuation">)</span>  <span class="token comment"># 用户中心>>软件ID 生成一个替换 96001</span>    im <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./code.png'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 本地图片文件路径 来替换 a.jpg 有时WIN系统须要//</span>    code <span class="token operator">=</span> chaojiying<span class="token punctuation">.</span>PostPic<span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token number">1004</span><span class="token punctuation">)</span>    code_img <span class="token operator">=</span> code<span class="token punctuation">[</span><span class="token string">'pic_str'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>code_img<span class="token punctuation">)</span>  <span class="token comment"># 1902 验证码类型  官方网站>>价格体系 3.4+版 print 后要加()</span>    username_tag <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'normal_login_name'</span><span class="token punctuation">)</span>    username_tag<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'19858165529'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    password_tag <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token string">'normal_login_password'</span><span class="token punctuation">)</span>    password_tag<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'hxl158120'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    text <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'normal_login_vcode'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token comment"># fullXpath 相对路径定位不到</span>    Verification_code <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>XPATH<span class="token punctuation">,</span><span class="token string">'/html/body/div/div/div[4]/div[2]/div[2]/form/div[3]/div/div/div/div/div[1]/input'</span><span class="token punctuation">)</span>    Verification_code<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>code_img<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    Login_btn <span class="token operator">=</span> bro<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'login-form-button'</span><span class="token punctuation">)</span>    Login_btn<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Google-无头浏览器"><a href="#Google-无头浏览器" class="headerlink" title="Google 无头浏览器"></a>Google 无头浏览器</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token comment"># 无可视化界面</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>service <span class="token keyword">import</span> Service<span class="token comment"># 规避selenium检测</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver <span class="token keyword">import</span> ChromeOptions<span class="token comment"># 实现无可视化界面的操作</span>chrome_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--headless'</span><span class="token punctuation">)</span>chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--disable-gpu'</span><span class="token punctuation">)</span><span class="token comment"># 实现规避检测</span>option <span class="token operator">=</span> ChromeOptions<span class="token punctuation">(</span><span class="token punctuation">)</span>option<span class="token punctuation">.</span>add_experimental_option<span class="token punctuation">(</span><span class="token string">'excludeSwitches'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'enable-automation'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>s <span class="token operator">=</span> Service<span class="token punctuation">(</span><span class="token string">"chromedriver.exe"</span><span class="token punctuation">)</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>service<span class="token operator">=</span>s<span class="token punctuation">)</span><span class="token comment"># bro = webdriver.Chrome(executable_path='./chromedriver',options=chrome_options)</span>bro <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>chrome_options<span class="token operator">=</span>chrome_options<span class="token punctuation">,</span> options<span class="token operator">=</span>option<span class="token punctuation">)</span>bro<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://qzone.qq.com/'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bro<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>bro<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基本概述&quot;&gt;&lt;a href=&quot;#基本概述&quot; class=&quot;headerlink&quot; title=&quot;基本概述&quot;&gt;&lt;/a&gt;基本概述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;selenium&lt;/code&gt;可以便捷的获取网站中的动态加在的数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s</summary>
      
    
    
    
    <category term="爬虫" scheme="https://shaoshaossm.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫模拟登陆和异步爬虫</title>
    <link href="https://shaoshaossm.github.io/2021-11-17-python-pa-chong-mo-ni-deng-lu-he-yi-bu-pa-chong.html"/>
    <id>https://shaoshaossm.github.io/2021-11-17-python-pa-chong-mo-ni-deng-lu-he-yi-bu-pa-chong.html</id>
    <published>2021-11-17T08:54:12.000Z</published>
    <updated>2021-11-19T08:38:40.450Z</updated>
    
    <content type="html"><![CDATA[<h3 id="模拟登陆"><a href="#模拟登陆" class="headerlink" title="模拟登陆"></a>模拟登陆</h3><ul><li>使用<strong>超级鹰</strong>平台识别验证码的编码流程:<ul><li>将验证码图片进行本地下载</li><li>调用平台提供的示例代码进行图片数据识别</li></ul></li></ul><p>有<strong>验证码</strong>,验证码可以读取到但测试未成功</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 验证码</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> html<span class="token keyword">import</span> chaojiying<span class="token comment"># 封装识别验证码函数</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'</span>    <span class="token punctuation">&#125;</span>    url <span class="token operator">=</span> <span class="token string">"https://so.gushiwen.cn/user/login.aspx?from=http://so.gushiwen.cn/user/collect.aspx"</span>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text    tree <span class="token operator">=</span> html<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>    code_img_src <span class="token operator">=</span> <span class="token string">'https://so.gushiwen.cn/'</span> <span class="token operator">+</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="imgCode"]/@src'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>code_img_src<span class="token punctuation">)</span>    code_img_data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>code_img_src<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./code.jpg'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>code_img_data<span class="token punctuation">)</span>    chaojiying <span class="token operator">=</span> chaojiying<span class="token punctuation">.</span>Chaojiying_Client<span class="token punctuation">(</span><span class="token string">'19858165529'</span><span class="token punctuation">,</span> <span class="token string">'hxl158120'</span><span class="token punctuation">,</span> <span class="token string">'925040'</span><span class="token punctuation">)</span>  <span class="token comment"># 用户中心>>软件ID 生成一个替换 96001</span>    im <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./code.jpg'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 本地图片文件路径 来替换 a.jpg 有时WIN系统须要//</span>    code <span class="token operator">=</span> chaojiying<span class="token punctuation">.</span>PostPic<span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token number">1004</span><span class="token punctuation">)</span>    code_img <span class="token operator">=</span> code<span class="token punctuation">[</span><span class="token string">'pic_str'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>code_img<span class="token punctuation">)</span>  <span class="token comment"># 1902 验证码类型  官方网站>>价格体系 3.4+版 print 后要加()</span>    <span class="token comment"># 模拟登陆</span>    login_url <span class="token operator">=</span> <span class="token string">"https://so.gushiwen.cn/user/login.aspx?"</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'from'</span><span class="token punctuation">:</span> <span class="token string">'http://so.gushiwen.cn/user/collect.aspx'</span><span class="token punctuation">,</span>        <span class="token string">'email'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'pwd'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'code'</span><span class="token punctuation">:</span> code_img<span class="token punctuation">,</span>        <span class="token string">'denglu'</span><span class="token punctuation">:</span> <span class="token string">'登录'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>login_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    login_page_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'changyan.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>login_page_text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>cookie</code> : 用来让服务端记录客户端的相关状态</li><li>自动处理: <ul><li><code>cookie</code>来源于模拟登陆请求后,由服务端创建</li><li><code>session</code>会话对象:<ul><li>进行请求的发送</li><li>如果请求中产生了<code>cookie</code>,则由<code>cookie</code>会被自动存储/携带在<code>session</code>对象中</li></ul></li></ul></li></ul><p>无<strong>验证码</strong>,模拟登陆并获取用户数据 测试成功</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 模拟登陆无验证码</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> html<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'</span>    <span class="token punctuation">&#125;</span>    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string">"https://work.shopeebao1688.com/login.html"</span>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text    tree <span class="token operator">=</span> html<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>    login_url <span class="token operator">=</span> <span class="token string">"https://work.shopeebao1688.com/index/Login/doLogin?username=13668567749&amp;password=yangbiao2021"</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">''</span>    <span class="token punctuation">&#125;</span>    response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>login_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    login_page_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    detail_url <span class="token operator">=</span> <span class="token string">"https://work.shopeebao1688.com/main"</span>    <span class="token comment"># 使用携带cookie 的session 进行get请求的发送</span>    detail_page_text <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>detail_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'xiabao.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>detail_page_text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><ul><li><p>带路服务器</p></li><li><p>代理的作用:</p><ul><li>突破自身访问限制</li><li>隐藏自身真实IP</li></ul></li><li><p>代理相关网站</p><ul><li>快代理</li></ul></li><li><p>代理<code>ip</code>类型</p><ul><li><code>http</code>:应用到http协议对应的url中</li><li><code>https</code>:应用到http协议对应的url中 </li></ul></li><li><p>代理<code>ip</code>的匿名度</p><ul><li>透明：服务器知道该次请求使用了代理，也知道请求对应的真实ip</li><li>匿名：知道使用了代理，但不知道真实ip</li><li>高匿：不知道使用了代理，跟不知道真实的ip</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 代理服务器  未成功（可能是没找到https的服务器）</span><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"https://www.baidu.com/s?ie=UTF-8&amp;wd=ip"</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'</span><span class="token punctuation">&#125;</span>page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"HTTP"</span><span class="token punctuation">:</span> <span class="token string">'39.99.149.148'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'ip2.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>    fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="异步爬虫之线程池"><a href="#异步爬虫之线程池" class="headerlink" title="异步爬虫之线程池"></a>异步爬虫之线程池</h3><ul><li>线程池处理的是阻塞且耗时的操作</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 爬取梨视频</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> html<span class="token keyword">from</span> multiprocessing<span class="token punctuation">.</span>dummy <span class="token keyword">import</span> Pool<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'</span>    <span class="token punctuation">&#125;</span>    url <span class="token operator">=</span> <span class="token string">"https://www.pearvideo.com/category_10"</span>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text    tree <span class="token operator">=</span> html<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>    li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//ul[@id="listvideoListUl"]/li'</span><span class="token punctuation">)</span>    urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 所有视频的连接</span>    <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span>        detail_url <span class="token operator">=</span> <span class="token string">'https://www.pearvideo.com/'</span> <span class="token operator">+</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        href <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./div/a/div[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.mp4'</span>        video_id <span class="token operator">=</span> detail_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'</span>            <span class="token punctuation">,</span> <span class="token string">'Referer'</span><span class="token punctuation">:</span> <span class="token string">'https://www.pearvideo.com/'</span> <span class="token operator">+</span> href        <span class="token punctuation">&#125;</span>        video_href <span class="token operator">=</span> <span class="token string">'https://www.pearvideo.com/videoStatus.jsp?contId='</span> <span class="token operator">+</span> video_id        video_url <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>video_href<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        video <span class="token operator">=</span> video_url<span class="token punctuation">[</span><span class="token string">"videoInfo"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"videos"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"srcUrl"</span><span class="token punctuation">]</span>        video <span class="token operator">=</span> video<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>video<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'cont-%s'</span> <span class="token operator">%</span> video_id<span class="token punctuation">)</span>        dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span>            <span class="token string">'url'</span><span class="token punctuation">:</span> video        <span class="token punctuation">&#125;</span>        urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dic<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_video_data</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> dic<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'正在下载。。。'</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>            fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'下载成功'</span><span class="token punctuation">)</span>    <span class="token comment"># 使用线程池对视频数据进行请求</span>    pool <span class="token operator">=</span> Pool<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>get_video_data<span class="token punctuation">,</span> urls<span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="单线程-异步协程"><a href="#单线程-异步协程" class="headerlink" title="单线程+异步协程"></a>单线程+异步协程</h3><ul><li><code>event_loop</code>:事件循环,相当于一个无限循环,我们可以把一些函数注册到这个事件循环上,当满足某些条件时,函数就会被执行</li><li><code>coroutine</code>: 协程对象,可以把协程对象注册到事件循环中,它会被事件循环调用.可以使用<code>async</code>关键字定义一个方法,这个方法在调用时不会执行,而是返回一个协程对象</li><li><code>task</code>:任务,它是对协程对象的一个封装,包含了任务的各个状态</li><li><code>future</code>: 代表将来执行或还没有执行的任务,实际上和<code>task</code>没有本质区别</li><li><code>async</code>: 定义一个协程</li><li><code>await</code>: 用来挂起阻塞方法的执行</li></ul><h4 id="协程基础案例演示"><a href="#协程基础案例演示" class="headerlink" title="协程基础案例演示"></a>协程基础案例演示</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> asyncio<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在请求的url"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请求成功"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>    <span class="token keyword">return</span> url<span class="token comment"># async 修饰的函数,调用之后返回的是一个协程对象</span>c <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token comment"># # 创建事件循环对象</span><span class="token comment"># loop = asyncio.get_event_loop()</span><span class="token comment"># # 将协程对象注册到loop中,然后启动loop</span><span class="token comment"># loop.run_until_complete(c)</span><span class="token comment"># task使用</span><span class="token comment">#loop = asyncio.get_event_loop()</span><span class="token comment"># 基于loop创建一个task对象</span><span class="token comment"># task = loop.create_task(c)</span><span class="token comment">#</span><span class="token comment"># print(task)</span><span class="token comment"># loop.run_until_complete(task)</span><span class="token comment"># print(task)</span><span class="token comment"># future的使用</span><span class="token comment"># loop = asyncio.get_event_loop()</span><span class="token comment"># task = asyncio.ensure_future(c)</span><span class="token comment"># print(task)</span><span class="token comment"># loop.run_until_complete(task)</span><span class="token comment"># print(task)</span><span class="token keyword">def</span> <span class="token function">callback_func</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 绑定回调</span>loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>c<span class="token punctuation">)</span>task<span class="token punctuation">.</span>add_done_callback<span class="token punctuation">(</span>callback_func<span class="token punctuation">)</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>task<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="多任务异步协程"><a href="#多任务异步协程" class="headerlink" title="多任务异步协程"></a>多任务异步协程</h4><ul><li>基础案例演示</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> asyncio<span class="token keyword">import</span> time<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在下载"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>    <span class="token comment"># time.sleep(2)  6s</span>    <span class="token comment"># 当在asyncio中遇到阻塞操作必须手动挂起</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 2s</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"下载完毕"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>urls <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'www.baidu.com'</span><span class="token punctuation">,</span>    <span class="token string">'www.4399.com'</span><span class="token punctuation">,</span>    <span class="token string">'www.ssm.com'</span><span class="token punctuation">]</span>stasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span>    c <span class="token operator">=</span> request<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>c<span class="token punctuation">)</span>    stasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>task<span class="token punctuation">)</span>loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 将任务列表封装到wait中</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>stasks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>start<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>进阶案例</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">import</span> timeapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/ssm'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index_ssm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"hello ssm"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/shao'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index_shao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"hello shao"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hxl'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index_hxl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"hello hxl"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>threaded<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> asyncio<span class="token keyword">import</span> time<span class="token keyword">import</span> aiohttpurls <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'http://127.0.0.1:5000/ssm'</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:5000/shao'</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:5000/hxl'</span><span class="token punctuation">]</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_page</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">async</span> <span class="token keyword">with</span> aiohttp<span class="token punctuation">.</span>ClientSession<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>        <span class="token comment"># headers params/data proxy='http://ip:port'</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> <span class="token keyword">await</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> response<span class="token punctuation">:</span>            page_text <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>page_text<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正在下载'</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'下载完毕'</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span>    c <span class="token operator">=</span> get_page<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>c<span class="token punctuation">)</span>    tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>task<span class="token punctuation">)</span>loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 将任务列表封装到wait中</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;模拟登陆&quot;&gt;&lt;a href=&quot;#模拟登陆&quot; class=&quot;headerlink&quot; title=&quot;模拟登陆&quot;&gt;&lt;/a&gt;模拟登陆&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用&lt;strong&gt;超级鹰&lt;/strong&gt;平台识别验证码的编码流程:&lt;ul&gt;
&lt;li&gt;将验证码图片进行本地下载</summary>
      
    
    
    
    <category term="爬虫" scheme="https://shaoshaossm.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python问题合集</title>
    <link href="https://shaoshaossm.github.io/2021-11-16-python-pa-chong-wen-ti-he-ji.html"/>
    <id>https://shaoshaossm.github.io/2021-11-16-python-pa-chong-wen-ti-he-ji.html</id>
    <published>2021-11-16T08:57:33.000Z</published>
    <updated>2022-01-13T10:43:35.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 通用中文乱码的解决方案</span>img_name <span class="token operator">=</span> img_name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'iso-8859-1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token comment"># 手动设置相应数据的编码格式</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>response<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token comment">#  text -> content</span>response<span class="token punctuation">.</span>text 改成 response<span class="token punctuation">.</span>content<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><ul><li>解决python爬虫<code>requests.exceptions.SSLError: HTTPSConnectionPool(host=&#39;XXX&#39;, port=443)</code>问题</li></ul><ol><li>安装<code>cryptography</code>、<code>pyOpenSSL</code>、<code>certifi</code>三个模块即可</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> cryptographypip <span class="token function">install</span> pyOpenSSLpip <span class="token function">install</span> certifi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>requests库提示警告：<code>InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate ver</code></li></ul><ol><li>加入如下代码即可</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>提取html文件报错<code>lxml.etree.XMLSyntaxError: Opening and ending tag mismatch: meta line 4 and head</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">原因在于html标签未加 <span class="token operator">/</span> 所有的标签最好都用 <span class="token operator">/</span> 来结束<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>TypeError: can only concatenate str (not “list”) to str</code>(列表和字符串的报错解决方法)</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 强转即可</span><span class="token builtin">str</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>警告<code>DeprecationWarning: executable_path has been deprecated, please pass in a Service object</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 是使用api过期导致此警告 使用这个（测试案例）即可</span><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>service <span class="token keyword">import</span> Services <span class="token operator">=</span> Service<span class="token punctuation">(</span><span class="token string">"chromedriver.exe"</span><span class="token punctuation">)</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>service<span class="token operator">=</span>s<span class="token punctuation">)</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.baidu.com/'</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>标签定位不到<code>selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用标签的绝对定位</span>bro<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>XPATH<span class="token punctuation">,</span><span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>l类型错误 :<code>TypeError: ‘ItemMeta‘ object does not support item assignment</code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 报错原因：未找到具体item，load出错，item后面需要加()进行实例化。</span>item <span class="token operator">=</span> MeinvproItem<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>scrapy框架写入数据库中存储数据部分代码报错 <code>redis.exceptions.DataError: Invalid input of type: &#39;dict&#39;. Convert to a byte, string or number first. </code></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用旧版本pip install redis==2.10.6，即可解决</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="jupyter"><a href="#jupyter" class="headerlink" title="jupyter"></a>jupyter</h3><ul><li>每次打开jupyter提示如下行信息</li></ul><p><img src="https://img-blog.csdnimg.cn/2bad4a8b136c4f35a72dcd06bf0f74b3.png" alt="autopep8"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> autopep8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>设置代码提示功能</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装nbextensions</span>pip <span class="token function">install</span> jupyter_contrib_nbextensions -i https://pypi.mirrors.ustc.edu.cn/simplejupyter contrib nbextension <span class="token function">install</span> --user-------------------------------------------------------------------------------------------------------------------<span class="token comment"># 安装nbextensions_configurator</span>pip <span class="token function">install</span> --user jupyter_nbextensions_configurator jupyter nbextensions_configurator <span class="token builtin class-name">enable</span> --user<span class="token comment"># 勾选Hinterland启用代码自动补全</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;中文乱码&quot;&gt;&lt;a href=&quot;#中文乱码&quot; class=&quot;headerlink&quot; title=&quot;中文乱码&quot;&gt;&lt;/a&gt;中文乱码&lt;/h3&gt;&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;</summary>
      
    
    
    
    <category term="爬虫" scheme="https://shaoshaossm.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Python" scheme="https://shaoshaossm.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>爬虫常用正则表达式</title>
    <link href="https://shaoshaossm.github.io/2021-11-16-pa-chong-chang-yong-zheng-ze-biao-da-shi.html"/>
    <id>https://shaoshaossm.github.io/2021-11-16-pa-chong-chang-yong-zheng-ze-biao-da-shi.html</id>
    <published>2021-11-16T03:35:46.000Z</published>
    <updated>2021-12-23T07:14:07.867Z</updated>
    
    <content type="html"><![CDATA[<ul><li>单字符<ul><li><code>.</code> : 除换行以外所有字符</li><li><code>[]</code> : [aoe] [a-w] 匹配集合中任意一个字符</li><li><code>\d</code>：元字符，代表0-9中的任意一个</li><li><code>\D</code> : 代表任意一个非数字字符</li><li><code>\w</code> : 数字、字母、下划线、中文</li><li><code>\W</code> : 非<code>\w</code> </li><li><code>\s</code> : 所有的空白字符,包括空格、制表符、换页符等,等价于<code>\f\n\r\t\v</code></li><li><code>\S</code> : 非空白   </li></ul></li><li>数量修饰<ul><li><code>*</code> : 任意多次   &gt;=0</li><li><code>+</code>: 至少一次    &gt;=1</li><li><code>?</code> : 可有可无   0次或一次</li><li><code>&#123;m&#125;</code> : 固定m次   hello{3,}</li><li><code>&#123;m,&#125;</code> : 至少m次</li><li><code>&#123;m,n&#125;</code> : m-n次</li></ul></li><li>边界<ul><li><code>$</code> : 以某某结尾</li><li><code>^</code> : 以某某开头</li></ul></li><li>分组<ul><li><code>(ab)</code></li></ul></li><li>贪婪模式 : <code>.*</code></li><li>非贪婪(惰性)模式 :<code> .*?</code></li><li><code>re.I</code> : 忽略大小写</li><li><code>re.M</code> : 多行匹配</li><li><code>re.S</code> : 但行匹配</li><li><code>re.sub</code> : (正则表达式,替换内容,字符串)</li></ul><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">import rekey &#x3D; &quot;javapython1myslqpython1&quot;print(re.findall(&#39;python1&#39;, key)[1])key &#x3D; &quot;&lt;html&gt;&lt;h1&gt;hello world&lt;h1&gt;&lt;&#x2F;html&gt;&quot;print(re.findall(&#39;&lt;h1&gt;(.*)&lt;h1&gt;&#39;, key))string &#x3D; &quot;I like 170 girl&quot;print(re.findall(&#39;\d&#39;, string))key &#x3D; &quot;http:&#x2F;&#x2F;www.baidu.com and https:&#x2F;&#x2F;www.shaoshaossm.github.io&quot;print(re.findall(&#39;https:&#x2F;&#x2F;&#39;, key))key &#x3D; &#39;am@shao.com&#39;print(re.findall(&#39;s.*?\.&#39;, key))key &#x3D; &#39;saas and asa and saaas&#39;print(re.findall(&#39;sa&#123;1,2&#125;s&#39;,key))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;单字符&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; : 除换行以外所有字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt; : [aoe] [a-w] 匹配集合中任意一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt;：元字符，代表0-9中的任意一个&lt;</summary>
      
    
    
    
    <category term="表达式" scheme="https://shaoshaossm.github.io/categories/%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="正则表达式" scheme="https://shaoshaossm.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秋水墨色染</title>
  
  
  <link href="https://shaoshaossm.github.io/atom.xml" rel="self"/>
  
  <link href="https://shaoshaossm.github.io/"/>
  <updated>2021-09-19T08:29:33.792Z</updated>
  <id>https://shaoshaossm.github.io/</id>
  
  <author>
    <name>shaoshaossm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原码,补码,反码理解</title>
    <link href="https://shaoshaossm.github.io/2021-09-19-yuan-ma-bu-ma-fan-ma-li-jie.html"/>
    <id>https://shaoshaossm.github.io/2021-09-19-yuan-ma-bu-ma-fan-ma-li-jie.html</id>
    <published>2021-09-19T07:18:44.000Z</published>
    <updated>2021-09-19T08:29:33.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-原码"><a href="#1-原码" class="headerlink" title="1.原码"></a>1.原码</h3><p>正数的符号位用0表示,负数的符号位用1表示,其余位为数值,这种表示方法称为<strong>原码</strong></p><pre class="line-numbers language-java"><code class="language-java">X <span class="token number">105</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> 1101001BX <span class="token operator">=</span> <span class="token operator">+</span><span class="token number">105</span> <span class="token punctuation">,</span><span class="token punctuation">[</span>X<span class="token punctuation">]</span>原 <span class="token operator">=</span> <span class="token number">0110</span> 1001BX <span class="token operator">=</span> <span class="token operator">-</span> <span class="token number">105</span> <span class="token punctuation">,</span><span class="token punctuation">[</span>X<span class="token punctuation">]</span>原 <span class="token operator">=</span> <span class="token number">1110</span> 1001B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-反码"><a href="#2-反码" class="headerlink" title="2.反码"></a>2.反码</h3><p>正数的反码与原码相同,最高位为符号位,用0表示,其余位为数值</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">0000</span> 0100B<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">0001</span> 1111B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>负数的反码为它的正数按位取反,就是连同符号位一同取反</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">1111</span> 1011B<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">31</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">1110</span> 0000B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>所以,8位二进制数表示的反码范围为-127~+127,当带符号数用反码表示时,最高位为符号数,当他为正数时,后7位为真正的值,当它为负数时,后7为要取反才能得到真正的值</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span>X<span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">1001</span> 0100B<span class="token punctuation">[</span>X<span class="token punctuation">]</span>真值 <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1101011</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">107</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-补码"><a href="#3-补码" class="headerlink" title="3.补码"></a>3.补码</h3><p>正数的补码表示与原码相同,最高位为符号位,用0表示,其余位为真值,负数的补码最高位为1,数值部分由他的反码再加1形成</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span>原 <span class="token operator">=</span> <span class="token number">0000</span> <span class="token number">0100</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span>补<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>原 <span class="token operator">=</span> <span class="token number">1000</span> 0100B<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token number">1111</span> <span class="token function">1011B</span>   <span class="token punctuation">(</span>正数按位取反<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> <span class="token number">1111</span> 1100B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="补码–-gt-真数"><a href="#补码–-gt-真数" class="headerlink" title="补码–&gt;真数"></a>补码–&gt;真数</h3><p>当符号位用补码表示时,最高位是符号位,当符号位是0时,表示正数,后7位为其真正的数;当符号位是1时,表示负数,要将后7位最低位减1,求得反码,在按位取反,才能得到真正的数(<strong>真数</strong>)</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 已知[X]补 = 10010100B,求X的反码和原码</span><span class="token punctuation">[</span>X<span class="token punctuation">]</span>反 <span class="token operator">=</span> <span class="token punctuation">[</span>X<span class="token punctuation">]</span>补<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1001</span> 0100B<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1001</span> 0011B<span class="token punctuation">[</span>X<span class="token punctuation">]</span>原 <span class="token operator">=</span> <span class="token number">1110</span> 1100BX <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">110</span> 1100B <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">+</span><span class="token number">32</span><span class="token operator">+</span><span class="token number">8</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token number">10</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">108</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>引进补码后,可以将补码连同符号位一起看做一个数,各位的权都是2的i次方,但最高位为0时表示正数,为1时表示负数,其余为数值</p><pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> <span class="token number">1000</span> 0000B <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span>最高位的权为<span class="token number">2</span>的<span class="token number">7</span>次方 <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">,</span>同理<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> <span class="token number">1111</span> 1100B <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">128</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">+</span><span class="token number">32</span><span class="token operator">+</span><span class="token number">16</span><span class="token operator">+</span><span class="token number">8</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> <span class="token number">0000</span> 0100B <span class="token operator">=</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>所以, <font color=green>任何一个数用补码表示后,都可以看成”连同符号位的数”</font>.符号位也一起参加运算,一个数减去另一个数时,只要加上其补码即可.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 求7-19=? 可以用7+[-19]补来完成</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> 00000111B<span class="token punctuation">[</span><span class="token operator">+</span><span class="token number">19</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> 00010011B<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">]</span>补 <span class="token operator">=</span> 11101101B  <span class="token number">0000</span> 0111B <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>补<span class="token operator">+</span> <span class="token number">1110</span> 1101B <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">]</span>补<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>  11110100B <span class="token operator">=</span> <span class="token function">F4H</span><span class="token punctuation">(</span>和<span class="token punctuation">)</span>和的补码 <span class="token operator">=</span> F4H <span class="token operator">=</span> <span class="token number">1111</span> 0100B和的反码 <span class="token operator">=</span> F4H <span class="token operator">=</span> <span class="token number">1111</span> 0011B和的原码 <span class="token operator">=</span> <span class="token number">1000</span> 1100B 其真值未<span class="token operator">-</span><span class="token number">12</span>可见<span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-原码&quot;&gt;&lt;a href=&quot;#1-原码&quot; class=&quot;headerlink&quot; title=&quot;1.原码&quot;&gt;&lt;/a&gt;1.原码&lt;/h3&gt;&lt;p&gt;正数的符号位用0表示,负数的符号位用1表示,其余位为数值,这种表示方法称为&lt;strong&gt;原码&lt;/strong&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="微机原理" scheme="https://shaoshaossm.github.io/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="机器数" scheme="https://shaoshaossm.github.io/tags/%E6%9C%BA%E5%99%A8%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>进制转换总结</title>
    <link href="https://shaoshaossm.github.io/2021-09-19-jin-zhi-zhuan-huan-zong-jie.html"/>
    <id>https://shaoshaossm.github.io/2021-09-19-jin-zhi-zhuan-huan-zong-jie.html</id>
    <published>2021-09-19T06:09:11.000Z</published>
    <updated>2021-09-19T07:11:09.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进制转换总结方法"><a href="#进制转换总结方法" class="headerlink" title="进制转换总结方法"></a>进制转换总结方法</h2><h3 id="1-十进制转换非十进制"><a href="#1-十进制转换非十进制" class="headerlink" title="1.  十进制转换非十进制"></a>1.  十进制转换非十进制</h3><p>总结:  十进制转换几进制就拿这个数除以几取余,知道商为0,然后倒叙写下来即可!<br>示例图:</p><p>   <img src="https://exp-picture.cdn.bcebos.com/3fe32442a07aa0107f5e7f8bbfbb19efa35f3ec1.jpg?x-bce-process=image/resize,m_lfit,w_500,limit_1/format,f_jpg/quality,q_80" alt="十进制转二进制"></p><h3 id="2-十进制小数部分转换非十进制"><a href="#2-十进制小数部分转换非十进制" class="headerlink" title="2. 十进制小数部分转换非十进制"></a>2. 十进制小数部分转换非十进制</h3><p>总结: 十进制转换几进制的小数部分就拿这个数的小数部分乘以几,得到的整数部分正序写到0.后面即可<br>方法：</p><p>1、乘2取整法，即将小数部分乘以2，然后取整数部分，剩下的小数部分继续乘以2，然后取整数部分，剩下的小数部分又乘以2，一直取到小数部分 。</p><p>2.为零为止。如果永远不能为零，就同十进制数的四舍五入一样，按照要求保留多少位小数时，就根据后面一位是0还是1，取舍，如果是零，舍掉，如果是1，向入一位。换句话说就是0舍1入。读数要从前面的整数读到后面的整数。</p><p>下面举例：<br>例1：将0.125换算为二进制<br>得出结果：将0.125换算为二进制（0.001）2 。</p><p>分析：</p><ul><li>第一步，将0.125乘以2，得0.25,则整数部分为0,小数部分为0.25。</li><li>第二步, 将小数部分0.25乘以2,得0.5,则整数部分为0,小数部分为0.5。</li><li>第三步, 将小数部分0.5乘以2,得1.0,则整数部分为1,小数部分为0.0。</li><li>第四步,读数,从第一位读起,读到最后一位,即为0.001。</li></ul><p><img src="https://iknow-pic.cdn.bcebos.com/e850352ac65c1038d8ca332ebc119313b17e89a2" alt="6.125转换成二进制"></p><h3 id="3-负整数转换成二进制"><a href="#3-负整数转换成二进制" class="headerlink" title="3.负整数转换成二进制"></a>3.负整数转换成二进制</h3><p>方法：先是将对应的正整数转换成二进制后，对二进制取反，然后对结果再加一。还以42为例，负整数就是-42，如图4所示为方法解释。最后即为：（-42）10=（11010110）2。<br><img src="https://iknow-pic.cdn.bcebos.com/11385343fbf2b2111d5e78a2c48065380dd78eee" alt="-42转换成二进制"></p><h3 id="4-正整数二进制转换为十进制"><a href="#4-正整数二进制转换为十进制" class="headerlink" title="4. 正整数二进制转换为十进制"></a>4. 正整数二进制转换为十进制</h3><p>方法: 首先将二进制数补齐位数，首位如果是0就代表是正整数，如果首位是1则代表是负整数。先看首位是0的正整数，补齐位数以后，将二进制中的位数分别将下边对应的值相乘，然后相加得到的就为十进制，比如1010转换为十进制。 </p><p><img src="https://iknow-pic.cdn.bcebos.com/fd039245d688d43f7eff6c1e731ed21b0ff43b8c?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg" alt="1010转换成十进制"></p><h3 id="5-负整数二进制转换为十进制"><a href="#5-负整数二进制转换为十进制" class="headerlink" title="5 .负整数二进制转换为十进制"></a>5 .负整数二进制转换为十进制</h3><p>方法: 若二进制补足位数后首位为1时，就需要先取反再换算：例如，11101011，首位为1，那么就先取反吧：-00010100，然后算一下10100对应的十进制为20，所以对应的十进制为-20。</p><p><img src="https://iknow-pic.cdn.bcebos.com/838ba61ea8d3fd1f9cbe5fd63e4e251f94ca5fa3?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg" alt="11101011"></p><h3 id="6-小知识点"><a href="#6-小知识点" class="headerlink" title="6. 小知识点"></a>6. 小知识点</h3><ol><li><p>表示二进制数时,后面必须加后缀B.</p></li><li><p>表示十六进制数时,后面必须加后缀H.</p></li><li><p>表示八进制数时,后面必须加后缀O或Q.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;进制转换总结方法&quot;&gt;&lt;a href=&quot;#进制转换总结方法&quot; class=&quot;headerlink&quot; title=&quot;进制转换总结方法&quot;&gt;&lt;/a&gt;进制转换总结方法&lt;/h2&gt;&lt;h3 id=&quot;1-十进制转换非十进制&quot;&gt;&lt;a href=&quot;#1-十进制转换非十进制&quot; class</summary>
      
    
    
    
    <category term="微机原理" scheme="https://shaoshaossm.github.io/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="进制转换" scheme="https://shaoshaossm.github.io/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用IDEA提交git代码</title>
    <link href="https://shaoshaossm.github.io/2021-09-19-shi-yong-idea-ti-jiao-git-dai-ma.html"/>
    <id>https://shaoshaossm.github.io/2021-09-19-shi-yong-idea-ti-jiao-git-dai-ma.html</id>
    <published>2021-09-18T16:13:33.000Z</published>
    <updated>2021-09-18T16:20:07.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="初次使用请多多见谅"><a href="#初次使用请多多见谅" class="headerlink" title="初次使用请多多见谅"></a>初次使用请多多见谅</h3><ol><li>创建一个空项目</li><li>点击如图所示<br><img src="https://img-blog.csdnimg.cn/275115ac9cc843d0bdb001d8ec7f0fc4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAd2VpeGluXzQ1MjAwNzM5,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>下一步 点击如图所示<br><img src="https://img-blog.csdnimg.cn/f6324e3f89684acb9f4216baf29aeeae.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAd2VpeGluXzQ1MjAwNzM5,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>再点击如图所示<br><img src="https://img-blog.csdnimg.cn/e1718aea99f04c18b72bc675d042700f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAd2VpeGluXzQ1MjAwNzM5,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>提示输入仓库地址 输入即可提交代码,如图所示<br><img src="https://img-blog.csdnimg.cn/1abec00e879f4c90a48272844a9acbf9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAd2VpeGluXzQ1MjAwNzM5,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;初次使用请多多见谅&quot;&gt;&lt;a href=&quot;#初次使用请多多见谅&quot; class=&quot;headerlink&quot; title=&quot;初次使用请多多见谅&quot;&gt;&lt;/a&gt;初次使用请多多见谅&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;创建一个空项目&lt;/li&gt;
&lt;li&gt;点击如图所示&lt;br&gt;&lt;img src=</summary>
      
    
    
    
    <category term="后端" scheme="https://shaoshaossm.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Git" scheme="https://shaoshaossm.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://shaoshaossm.github.io/2021-09-17-hello-world.html"/>
    <id>https://shaoshaossm.github.io/2021-09-17-hello-world.html</id>
    <published>2021-09-17T04:06:38.689Z</published>
    <updated>2021-09-18T16:22:07.014Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Local-file-backup"><a href="#Local-file-backup" class="headerlink" title="Local file backup"></a>Local file backup</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
